{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_highcharts = _resolveComponent(\"highcharts\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_highcharts, {\n    options: $data.chartOptions\n  }, null, 8 /* PROPS */, [\"options\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_highcharts","options","$data","chartOptions"],"sources":["/home/shivam/Desktop/tradetrek/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <highcharts :options=\"chartOptions\"></highcharts>\n  </div>\n</template>\n\n<script>\nimport Highcharts from 'highcharts'\nimport HighchartsVue from 'highcharts-vue'\nimport axios from 'axios'\n\nexport default {\n  components: {\n    highcharts: HighchartsVue.component\n  },\n  data() {\n    return {\n      chartOptions: {\n        rangeSelector: {\n          selected: 1\n        },\n        title: {\n          text: 'Dow Jones Industrial Average (DJI)'\n        },\n        series: [{\n          name: 'Dow Jones',\n          data: [], // Dow Jones data will be populated here\n          tooltip: {\n            valueDecimals: 2\n          }\n        }]\n      }\n    }\n  },\n  mounted() {\n    // Fetch Dow Jones data from Yahoo Finance API via RapidAPI\n    const options = {\n      method: 'GET',\n      url: 'https://yahoo-finance15.p.rapidapi.com/api/yahoo/qu/quote/DJI',\n      headers: {\n        'X-RapidAPI-Key': 'YOUR_RAPIDAPI_KEY', // Replace with your RapidAPI key\n        'X-RapidAPI-Host': 'yahoo-finance15.p.rapidapi.com'\n      }\n    };\n\n    axios.request(options)\n      .then(response => {\n        const data = this.formatData(response.data); // Format and set the data\n        this.chartOptions.series[0].data = data;\n      })\n      .catch(error => {\n        console.error('Error fetching Dow Jones data:', error);\n      });\n  },\n  methods: {\n    formatData(data) {\n      // Format the data according to the Highcharts series format\n      // Dow Jones data may require extracting date and price\n      // Example data format: [[timestamp, close_price], [timestamp, close_price], ...]\n\n      // Simulating response parsing for demonstration (you should adjust this based on the actual API response)\n      return data.chart.result[0].indicators.quote[0].close.map((close, index) => {\n        const timestamp = data.chart.result[0].timestamp[index] * 1000; // Convert to milliseconds for Highcharts\n        return [timestamp, close];\n      });\n    }\n  }\n}\n</script>\n"],"mappings":";;;uBACEA,mBAAA,CAEM,cADJC,YAAA,CAAiDC,qBAAA;IAApCC,OAAO,EAAEC,KAAA,CAAAC;EAAY,qC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}