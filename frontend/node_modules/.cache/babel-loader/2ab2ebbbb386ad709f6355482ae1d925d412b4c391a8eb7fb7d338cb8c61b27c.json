{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"chart-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Line = _resolveComponent(\"Line\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.loaded ? (_openBlock(), _createBlock(_component_Line, {\n    key: 0,\n    data: $data.chartData,\n    options: $data.chartOptions\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","$data","loaded","_createBlock","_component_Line","key","data","chartData","options","chartOptions","_createCommentVNode"],"sources":["/home/shivam/Desktop/tradetrek/frontend/src/components/DowJonesChart.vue"],"sourcesContent":["<template>\n  <div class=\"chart-container\">\n    <Line\n      v-if=\"loaded\"\n      :data=\"chartData\"\n      :options=\"chartOptions\"\n    />\n  </div>\n</template>\n\n<script>\nimport { Line } from 'vue-chartjs'\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, LinearScale, PointElement, CategoryScale } from 'chart.js'\nimport axios from 'axios'\n\nChartJS.register(Title, Tooltip, Legend, LineElement, LinearScale, PointElement, CategoryScale)\n\nexport default {\n  name: 'DowJonesChart',\n  components: { Line },\n  data() {\n    return {\n      loaded: false,\n      chartData: null,\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    }\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const response = await axios.get('https://www.alphavantage.co/query', {\n          params: {\n            function: 'TIME_SERIES_INTRADAY',\n            symbol: 'DJI', // Dow Jones Industrial Average\n            interval: '5min',\n            apikey: 'AIX0HNT8BAEVINAP.' // Replace with your Alpha Vantage API key\n          }\n        })\n        \n        const timeSeries = response.data['Time Series (5min)']\n        const labels = Object.keys(timeSeries).reverse()\n        const data = labels.map(time => parseFloat(timeSeries[time]['4. close']))\n        \n        this.chartData = {\n          labels,\n          datasets: [{\n            label: 'Dow Jones Industrial Average',\n            backgroundColor: '#f87979',\n            data\n          }]\n        }\n        this.loaded = true\n      } catch (error) {\n        console.error('Error fetching Dow Jones data:', error)\n      }\n    }\n  },\n  mounted() {\n    this.fetchData()\n    // Update every 5 minutes\n    setInterval(this.fetchData, 300000)\n  }\n}\n</script>\n\n<style scoped>\n.chart-container {\n  height: 400px;\n}\n</style>"],"mappings":";;EACO,SAAM;AAAiB;;;uBAA5BA,mBAAA,CAMM,OANNC,UAMM,GAJIC,KAAA,CAAAC,MAAM,I,cADdC,YAAA,CAIEC,eAAA;IANNC,GAAA;IAIOC,IAAI,EAAEL,KAAA,CAAAM,SAAS;IACfC,OAAO,EAAEP,KAAA,CAAAQ;kDALhBC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}