{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createBlock as _createBlock, createTextVNode as _createTextVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"layout\"\n};\nvar _hoisted_2 = {\n  \"class\": \"content\"\n};\nvar _hoisted_3 = {\n  \"class\": \"chart-container\"\n};\nvar _hoisted_4 = [\"value\"];\nvar _hoisted_5 = {\n  key: 0\n};\nvar _hoisted_6 = {\n  key: 1\n};\nvar _hoisted_7 = {\n  key: 3\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_apexchart = _resolveComponent(\"apexchart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" ... (keep the menu section as is) ... \"), _createElementVNode(\"main\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"NSE Stock Price Chart - Last 30 Days\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.selectedStock = $event;\n    }),\n    onChange: _cache[1] || (_cache[1] = function () {\n      return $setup.updateChart && $setup.updateChart.apply($setup, arguments);\n    })\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.availableStocks, function (stock) {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: stock,\n      value: stock\n    }, _toDisplayString(stock), 9 /* TEXT, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $setup.selectedStock]]), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"Loading chart data...\")) : $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \"Error loading data: \" + _toDisplayString($setup.error), 1 /* TEXT */)) : $setup.series.length > 0 && $setup.series[0].data.length > 0 ? (_openBlock(), _createBlock(_component_apexchart, {\n    key: 2,\n    type: \"candlestick\",\n    height: \"400\",\n    options: $setup.chartOptions,\n    series: $setup.series\n  }, null, 8 /* PROPS */, [\"options\", \"series\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \"No data available for the selected stock.\")), _createElementVNode(\"div\", null, [_cache[2] || (_cache[2] = _createTextVNode(\"Debug Info: \")), _createElementVNode(\"pre\", null, _toDisplayString($setup.debugInfo), 1 /* TEXT */)])]), _createCommentVNode(\" ... (keep the KPI section as is) ... \")])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_cache","$event","$setup","selectedStock","onChange","updateChart","apply","arguments","_Fragment","_renderList","availableStocks","stock","value","_hoisted_4","loading","_hoisted_5","error","_hoisted_6","_toDisplayString","series","length","data","_createBlock","_component_apexchart","type","height","options","chartOptions","_hoisted_7","_createTextVNode","debugInfo"],"sources":["/home/shivam/Desktop/tradetrek/frontend/src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"layout\">\n    <!-- ... (keep the menu section as is) ... -->\n    <main class=\"content\">\n      <div class=\"chart-container\">\n        <h2>NSE Stock Price Chart - Last 30 Days</h2>\n        <select v-model=\"selectedStock\" @change=\"updateChart\">\n          <option v-for=\"stock in availableStocks\" :key=\"stock\" :value=\"stock\">\n            {{ stock }}\n          </option>\n        </select>\n        <div v-if=\"loading\">Loading chart data...</div>\n        <div v-else-if=\"error\">Error loading data: {{ error }}</div>\n        <apexchart\n          v-else-if=\"series.length > 0 && series[0].data.length > 0\"\n          type=\"candlestick\"\n          height=\"400\"\n          :options=\"chartOptions\"\n          :series=\"series\"\n        ></apexchart>\n        <div v-else>No data available for the selected stock.</div>\n        <div>Debug Info:\n          <pre>{{ debugInfo }}</pre>\n        </div>\n      </div>\n      <!-- ... (keep the KPI section as is) ... -->\n    </main>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue'\nimport VueApexCharts from \"vue3-apexcharts\"\n\nexport default {\n  name: 'Home',\n  components: {\n    apexchart: VueApexCharts,\n  },\n  setup() {\n    const series = ref([])\n    const selectedStock = ref('RELIANCE')\n    const availableStocks = ref([])\n    const allStockData = ref({})\n    const loading = ref(true)\n    const error = ref(null)\n    \n    const chartOptions = ref({\n      chart: {\n        type: 'candlestick',\n        height: 400,\n      },\n      title: {\n        text: 'NSE Stock Price',\n        align: 'left'\n      },\n      xaxis: {\n        type: 'datetime'\n      },\n      yaxis: {\n        tooltip: {\n          enabled: true\n        },\n        labels: {\n          formatter: (value) => value.toFixed(2)\n        }\n      },\n      tooltip: {\n        enabled: true,\n        custom: ({ seriesIndex, dataPointIndex, w }) => {\n          const o = w.globals.seriesCandleO[seriesIndex][dataPointIndex]\n          const h = w.globals.seriesCandleH[seriesIndex][dataPointIndex]\n          const l = w.globals.seriesCandleL[seriesIndex][dataPointIndex]\n          const c = w.globals.seriesCandleC[seriesIndex][dataPointIndex]\n          return `\n            <div class=\"apexcharts-tooltip-box\">\n              <div>Open: <span class=\"value\">${o.toFixed(2)}</span></div>\n              <div>High: <span class=\"value\">${h.toFixed(2)}</span></div>\n              <div>Low: <span class=\"value\">${l.toFixed(2)}</span></div>\n              <div>Close: <span class=\"value\">${c.toFixed(2)}</span></div>\n            </div>\n          `\n        }\n      }\n    })\n\n    const updateChart = () => {\n      const stockData = allStockData.value[selectedStock.value] || []\n      series.value = [{\n        data: stockData.map(item => ({\n          x: new Date(item.time).getTime(),\n          y: [item.open, item.high, item.low, item.close]\n        }))\n      }]\n      chartOptions.value.title.text = `${selectedStock.value} NSE Stock Price`\n    }\n\n    const latestData = computed(() => {\n      const stockData = allStockData.value[selectedStock.value] || []\n      return stockData[stockData.length - 1] || {}\n    })\n\n    const debugInfo = computed(() => {\n      return {\n        selectedStock: selectedStock.value,\n        availableStocks: availableStocks.value,\n        seriesLength: series.value.length,\n        dataLength: series.value[0]?.data.length,\n        sampleData: series.value[0]?.data.slice(0, 2)\n      }\n    })\n\n    onMounted(async () => {\n      try {\n        loading.value = true\n        error.value = null\n        const response = await fetch('/nse_stock_data.json')\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`)\n        }\n        allStockData.value = await response.json()\n        availableStocks.value = Object.keys(allStockData.value)\n        updateChart()\n      } catch (e) {\n        console.error('Error loading NSE stock data:', e)\n        error.value = e.message\n      } finally {\n        loading.value = false\n      }\n    })\n\n    return {\n      series,\n      chartOptions,\n      selectedStock,\n      availableStocks,\n      updateChart,\n      latestData,\n      loading,\n      error,\n      debugInfo\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* ... (keep the existing styles) ... */\n\n.chart-container {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  margin-bottom: 20px;\n  min-height: 500px; /* Ensure there's space for the chart */\n}\n\npre {\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  background-color: #f0f0f0;\n  padding: 10px;\n  border-radius: 4px;\n}\n</style>"],"mappings":";;EACO,SAAM;AAAQ;;EAEX,SAAM;AAAS;;EACd,SAAM;AAAiB;iBAJlC;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;uBACEC,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJC,mBAAA,2CAA8C,EAC9CC,mBAAA,CAuBO,QAvBPC,UAuBO,GAtBLD,mBAAA,CAoBM,OApBNE,UAoBM,G,0BAnBJF,mBAAA,CAA6C,YAAzC,sCAAoC,sB,gBACxCA,mBAAA,CAIS;IAVjB,uBAAAG,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAMyBC,MAAA,CAAAC,aAAa,GAAAF,MAAA;IAAA;IAAGG,QAAM,EAAAJ,MAAA,QAAAA,MAAA;MAAA,OAAEE,MAAA,CAAAG,WAAA,IAAAH,MAAA,CAAAG,WAAA,CAAAC,KAAA,CAAAJ,MAAA,EAAAK,SAAA,CAAW;IAAA;yBAClDb,mBAAA,CAESc,SAAA,QATnBC,WAAA,CAOkCP,MAAA,CAAAQ,eAAe,EAPjD,UAOyBC,KAAK;yBAApBjB,mBAAA,CAES;MAFiCD,GAAG,EAAEkB,KAAK;MAAGC,KAAK,EAAED;wBACzDA,KAAK,wBARpBE,UAAA;2FAMyBX,MAAA,CAAAC,aAAa,E,GAKnBD,MAAA,CAAAY,OAAO,I,cAAlBpB,mBAAA,CAA+C,OAXvDqB,UAAA,EAW4B,uBAAqB,KACzBb,MAAA,CAAAc,KAAK,I,cAArBtB,mBAAA,CAA4D,OAZpEuB,UAAA,EAY+B,sBAAoB,GAAAC,gBAAA,CAAGhB,MAAA,CAAAc,KAAK,oBAEtCd,MAAA,CAAAiB,MAAM,CAACC,MAAM,QAAQlB,MAAA,CAAAiB,MAAM,IAAIE,IAAI,CAACD,MAAM,Q,cADvDE,YAAA,CAMaC,oBAAA;IAnBrB9B,GAAA;IAeU+B,IAAI,EAAC,aAAa;IAClBC,MAAM,EAAC,KAAK;IACXC,OAAO,EAAExB,MAAA,CAAAyB,YAAY;IACrBR,MAAM,EAAEjB,MAAA,CAAAiB;mEAEXzB,mBAAA,CAA2D,OApBnEkC,UAAA,EAoBoB,2CAAyC,IACrD/B,mBAAA,CAEM,c,0BAvBdgC,gBAAA,CAqBa,cACH,IAAAhC,mBAAA,CAA0B,aAAAqB,gBAAA,CAAlBhB,MAAA,CAAA4B,SAAS,iB,KAGrBlC,mBAAA,0CAA6C,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}