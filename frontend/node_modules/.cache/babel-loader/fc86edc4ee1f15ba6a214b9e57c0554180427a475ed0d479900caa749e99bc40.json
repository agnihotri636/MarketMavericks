{"ast":null,"code":"import _objectSpread from \"/home/shivam/Desktop/tradetrek/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _callSuper from \"/home/shivam/Desktop/tradetrek/frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _superPropGet from \"/home/shivam/Desktop/tradetrek/frontend/node_modules/@babel/runtime/helpers/esm/superPropGet.js\";\nimport _inherits from \"/home/shivam/Desktop/tradetrek/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _slicedToArray from \"/home/shivam/Desktop/tradetrek/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/home/shivam/Desktop/tradetrek/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _defineProperty from \"/home/shivam/Desktop/tradetrek/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _typeof from \"/home/shivam/Desktop/tradetrek/frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _toConsumableArray from \"/home/shivam/Desktop/tradetrek/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/shivam/Desktop/tradetrek/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/shivam/Desktop/tradetrek/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.last-index-of.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.max-safe-integer.js\";\nimport \"core-js/modules/es.object.create.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.freeze.js\";\nimport \"core-js/modules/es.object.get-own-property-names.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.object.is-extensible.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*!\n * Chart.js v4.4.5\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as _getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  return _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var _this = this;\n      if (this._request) {\n        return;\n      }\n      this._running = true;\n      this._request = requestAnimFrame.call(window, function () {\n        _this._update();\n        _this._request = null;\n        if (_this._running) {\n          _this._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var remaining = 0;\n      this._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          _this2._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          _this2._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      this._lastDate = date;\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n      if (!items || !items.length) {\n        return;\n      }\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      var items = anims.items;\n      var i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts[\"delete\"](chart);\n    }\n  }]);\n}();\nvar animator = /* #__PURE__ */new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  \"boolean\": function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n    var c1 = c0.valid && _color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || _typeof(from)];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  return _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n        var currentValue = this._target[this._prop];\n        var elapsed = date - this._start;\n        var remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n        this._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var elapsed = date - this._start;\n      var duration = this._duration;\n      var prop = this._prop;\n      var from = this._from;\n      var loop = this._loop;\n      var to = this._to;\n      var factor;\n      this._active = from !== to && (loop || elapsed < duration);\n      if (!this._active) {\n        this._target[prop] = to;\n        this._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n}();\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  return _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n      var animationOptions = Object.keys(defaults.animation);\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n        if (!isObject(cfg)) {\n          return;\n        }\n        var resolved = {};\n        for (var _i = 0, _animationOptions = animationOptions; _i < _animationOptions.length; _i++) {\n          var option = _animationOptions[_i];\n          resolved[option] = cfg[option];\n        }\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      var animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      var animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n}();\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  var options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  var t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n  var i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction _applyStack(stack, value, dsIndex) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n  var iScale = meta.iScale,\n    vScale = meta.vScale;\n  var iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  var vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = _defineProperty(_defineProperty({}, iAxisKey, key), vAxisKey, data[key]);\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n    min = _scale$getUserBounds.min,\n    max = _scale$getUserBounds.max,\n    minDefined = _scale$getUserBounds.minDefined,\n    maxDefined = _scale$getUserBounds.maxDefined;\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  var _iterator = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas(type).reverse()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var meta = _step.value;\n      var value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n    meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n    vScale = meta.vScale,\n    datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var _index = item[iAxis],\n      value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, _index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    var visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  var _iterator2 = _createForOfIteratorHelper(items),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var parsed = _step2.value;\n      var stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n      delete stacks[axis][datasetIndex];\n      if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n        delete stacks[axis]._visualValues[datasetIndex];\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\nvar createStack = function createStack(canStack, meta, chart) {\n  return canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n};\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = (this instanceof DatasetController ? this.constructor : void 0).datasetElementType;\n    this.dataElementType = (this instanceof DatasetController ? this.constructor : void 0).dataElementType;\n    this.initialize();\n  }\n  return _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n      if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n        console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n      }\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var dataset = this.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = this._data;\n      if (isObject(data)) {\n        var meta = this._cachedMeta;\n        this._data = convertObjectDataToArray(data, meta);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          var _meta = this._cachedMeta;\n          clearStacks(_meta);\n          _meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var meta = this._cachedMeta;\n      this._dataCheck();\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var stackChanged = false;\n      this._dataCheck();\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      this._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n        meta._stacked = isStacked(meta.vScale, meta);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var config = this.chart.config;\n      var scopeKeys = config.datasetScopeKeys(this._type);\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var meta = this._cachedMeta,\n        data = this._data;\n      var iScale = meta.iScale,\n        _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        parsed[i] = _defineProperty(_defineProperty({}, iAxis, singleScale || iScale.parse(labels[index], index)), vAxis, vScale.parse(data[index], index));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n        _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n        xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n        _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n        yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]._visualValues\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var meta = this._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n      var otherScale = this._getOtherScale(scale);\n      var stack = createStack(canStack, meta, this.chart);\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      var _getUserBounds = getUserBounds(otherScale),\n        otherMin = _getUserBounds.min,\n        otherMax = _getUserBounds.max;\n      var i, parsed;\n      function _skip() {\n        parsed = _parsed[i];\n        var otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this._ctx;\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = this._drawStart || 0;\n      var count = this._drawCount || elements.length - start;\n      var drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      var i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n        if (element.hidden) {\n          continue;\n        }\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var dataset = this.getDataset();\n      var context;\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        var element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var _this3 = this;\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var active = mode === 'active';\n      var cache = this._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = this.enableOptionSharing && defined(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      var config = this.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n      var context = function context() {\n        return _this3.getContext(index, active, mode);\n      };\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var chart = this.chart;\n      var cache = this._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      var options;\n      if (chart.options.animation !== false) {\n        var config = this.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n      var animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"_getSharedOptions\",\n    value: function _getSharedOptions(start, mode) {\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var previouslySharedOptions = this._sharedOptions;\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      return {\n        sharedOptions: sharedOptions,\n        includeOptions: includeOptions\n      };\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var data = this._data;\n      var elements = this._cachedMeta.data;\n      var _iterator3 = _createForOfIteratorHelper(this._syncList),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 3),\n            method = _step3$value[0],\n            arg1 = _step3$value[1],\n            arg2 = _step3$value[2];\n          this[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n      if (count) {\n        this.parse(0, count);\n      }\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var meta = this._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n      var move = function move(arr) {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n      this.parse(start, count);\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var meta = this._cachedMeta;\n      if (this._parsing) {\n        var removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = _slicedToArray(args, 3),\n          method = _args2[0],\n          arg1 = _args2[1],\n          arg2 = _args2[2];\n        this[method](arg1, arg2);\n      }\n      this.chart._dataChanges.push([this.index].concat(_toConsumableArray(args)));\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n      var newCount = arguments.length - 2;\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n}();\n_defineProperty(DatasetController, \"defaults\", {});\n_defineProperty(DatasetController, \"datasetElementType\", null);\n_defineProperty(DatasetController, \"dataElementType\", null);\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    var visibleMetas = scale.getMatchingVisibleMetas(type);\n    var values = [];\n    for (var i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  var scale = meta.iScale;\n  var values = getAllScaleValues(scale, meta.type);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n  var _borderProps = borderProps(properties),\n    start = _borderProps.start,\n    end = _borderProps.end,\n    reverse = _borderProps.reverse,\n    top = _borderProps.top,\n    bottom = _borderProps.bottom;\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, _ref, ratio) {\n  var inflateAmount = _ref.inflateAmount;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nvar BarController = /*#__PURE__*/function (_DatasetController2) {\n  function BarController() {\n    _classCallCheck(this, BarController);\n    return _callSuper(this, BarController, arguments);\n  }\n  _inherits(BarController, _DatasetController2);\n  return _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n        _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n        xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n        _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n        yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _superPropGet(BarController, \"updateRangeFromParsed\", this, 3)([range, scale, parsed, stack]);\n      var custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _superPropGet(BarController, \"initialize\", this, 3)([]);\n      var meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var reset = mode === 'reset';\n      var index = this.index,\n        vScale = this._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n      var ruler = this._getRuler();\n      var _this$_getSharedOptio = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio.sharedOptions,\n        includeOptions = _this$_getSharedOptio.includeOptions;\n      for (var i = start; i < start + count; i++) {\n        var parsed = this.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n        var ipixels = this._calculateBarIndexPixels(i, ruler);\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n        var options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var iScale = this._cachedMeta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(this._type).filter(function (meta) {\n        return meta.controller.options.grouped;\n      });\n      var stacked = iScale.options.stacked;\n      var stacks = [];\n      var currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n      var iScaleValue = currentParsed && currentParsed[iScale.axis];\n      var skipNull = function skipNull(meta) {\n        var parsed = meta._parsed.find(function (item) {\n          return item[iScale.axis] === iScaleValue;\n        });\n        var val = parsed && parsed[meta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          return true;\n        }\n      };\n      var _iterator4 = _createForOfIteratorHelper(metasets),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var meta = _step4.value;\n          if (dataIndex !== undefined && skipNull(meta)) {\n            continue;\n          }\n          if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n            stacks.push(meta.stack);\n          }\n          if (meta.index === last) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(meta);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var _this$_cachedMeta = this._cachedMeta,\n        vScale = _this$_cachedMeta.vScale,\n        _stacked = _this$_cachedMeta._stacked,\n        datasetIndex = _this$_cachedMeta.index,\n        _this$options = this.options,\n        baseValue = _this$options.base,\n        minBarLength = _this$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n        var startPixel = vScale.getPixelForDecimal(0);\n        var endPixel = vScale.getPixelForDecimal(1);\n        var min = Math.min(startPixel, endPixel);\n        var max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n        if (_stacked && !floating) {\n          parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n        }\n      }\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var scale = ruler.scale;\n      var options = this.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n      if (ruler.grouped) {\n        var stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        var stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }]);\n}(DatasetController);\n_defineProperty(BarController, \"id\", 'bar');\n_defineProperty(BarController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n});\n_defineProperty(BarController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n});\nvar BubbleController = /*#__PURE__*/function (_DatasetController3) {\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n    return _callSuper(this, BubbleController, arguments);\n  }\n  _inherits(BubbleController, _DatasetController3);\n  return _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _superPropGet(BubbleController, \"initialize\", this, 3)([]);\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var parsed = _superPropGet(BubbleController, \"parsePrimitiveData\", this, 3)([meta, data, start, count]);\n      for (var i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var parsed = _superPropGet(BubbleController, \"parseArrayData\", this, 3)([meta, data, start, count]);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var parsed = _superPropGet(BubbleController, \"parseObjectData\", this, 3)([meta, data, start, count]);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var data = this._cachedMeta.data;\n      var max = 0;\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var labels = this.chart.data.labels || [];\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: labels[index] || '',\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta2 = this._cachedMeta,\n        iScale = _this$_cachedMeta2.iScale,\n        vScale = _this$_cachedMeta2.vScale;\n      var _this$_getSharedOptio2 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio2.sharedOptions,\n        includeOptions = _this$_getSharedOptio2.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && this.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n      var values = _superPropGet(BubbleController, \"resolveDataElementOptions\", this, 3)([index, mode]);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      var radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n}(DatasetController);\n_defineProperty(BubbleController, \"id\", 'bubble');\n_defineProperty(BubbleController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n});\n_defineProperty(BubbleController, \"overrides\", {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\nvar DoughnutController = /*#__PURE__*/function (_DatasetController4) {\n  function DoughnutController(chart, datasetIndex) {\n    var _this4;\n    _classCallCheck(this, DoughnutController);\n    _this4 = _callSuper(this, DoughnutController, [chart, datasetIndex]);\n    _this4.enableOptionSharing = true;\n    _this4.innerRadius = undefined;\n    _this4.outerRadius = undefined;\n    _this4.offsetX = undefined;\n    _this4.offsetY = undefined;\n    return _this4;\n  }\n  _inherits(DoughnutController, _DatasetController4);\n  return _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        var getter = function getter(i) {\n          return +data[i];\n        };\n        if (isObject(data[start])) {\n          var _this$_parsing$key = this._parsing.key,\n            key = _this$_parsing$key === void 0 ? 'value' : _this$_parsing$key;\n          getter = function getter(i) {\n            return +resolveObjectKey(data[i], key);\n          };\n        }\n        var i, ilen;\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n      for (var i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n          var controller = this.chart.getDatasetMeta(i).controller;\n          var rotation = controller._getRotation();\n          var circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var meta = this._cachedMeta;\n      var arcs = meta.data;\n      var spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n      var chartWeight = this._getRingWeight(this.index);\n      var _this$_getRotationExt = this._getRotationExtents(),\n        circumference = _this$_getRotationExt.circumference,\n        rotation = _this$_getRotationExt.rotation;\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n        ratioX = _getRatioAndOffset.ratioX,\n        ratioY = _getRatioAndOffset.ratioY,\n        offsetX = _getRatioAndOffset.offsetX,\n        offsetY = _getRatioAndOffset.offsetY;\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(this.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n      var radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var circumference = this._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : this.innerRadius;\n      var outerRadius = animateScale ? 0 : this.outerRadius;\n      var _this$_getSharedOptio3 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio3.sharedOptions,\n        includeOptions = _this$_getSharedOptio3.includeOptions;\n      var startAngle = this._getRotation();\n      var i;\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        var circumference = this._circumference(i, reset);\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var chart = this.chart;\n      var i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n}(DatasetController);\n_defineProperty(DoughnutController, \"id\", 'doughnut');\n_defineProperty(DoughnutController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n});\n_defineProperty(DoughnutController, \"descriptors\", {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash');\n  }\n});\n_defineProperty(DoughnutController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var _chart$legend$options2 = chart.legend.options.labels,\n              pointStyle = _chart$legend$options2.pointStyle,\n              color = _chart$legend$options2.color;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    }\n  }\n});\nvar LineController = /*#__PURE__*/function (_DatasetController5) {\n  function LineController() {\n    _classCallCheck(this, LineController);\n    return _callSuper(this, LineController, arguments);\n  }\n  _inherits(LineController, _DatasetController5);\n  return _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n      _superPropGet(LineController, \"initialize\", this, 3)([]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset,\n        _meta$data = meta.data,\n        points = _meta$data === void 0 ? [] : _meta$data,\n        _dataset = meta._dataset;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi.start,\n        count = _getStartAndCountOfVi.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta3 = this._cachedMeta,\n        iScale = _this$_cachedMeta3.iScale,\n        vScale = _this$_cachedMeta3.vScale,\n        _stacked = _this$_cachedMeta3._stacked,\n        _dataset = _this$_cachedMeta3._dataset;\n      var _this$_getSharedOptio4 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio4.sharedOptions,\n        includeOptions = _this$_getSharedOptio4.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options2 = this.options,\n        spanGaps = _this$options2.spanGaps,\n        segment = _this$options2.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var end = start + count;\n      var pointsCount = points.length;\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = 0; i < pointsCount; ++i) {\n        var point = points[i];\n        var properties = directUpdate ? point : {};\n        if (i < start || i >= end) {\n          properties.skip = true;\n          continue;\n        }\n        var parsed = this.getParsed(i);\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      _superPropGet(LineController, \"draw\", this, 3)([]);\n    }\n  }]);\n}(DatasetController);\n_defineProperty(LineController, \"id\", 'line');\n_defineProperty(LineController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n});\n_defineProperty(LineController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n});\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController6) {\n  function PolarAreaController(chart, datasetIndex) {\n    var _this5;\n    _classCallCheck(this, PolarAreaController);\n    _this5 = _callSuper(this, PolarAreaController, [chart, datasetIndex]);\n    _this5.innerRadius = undefined;\n    _this5.outerRadius = undefined;\n    return _this5;\n  }\n  _inherits(PolarAreaController, _DatasetController6);\n  return _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax() {\n      var _this6 = this;\n      var meta = this._cachedMeta;\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach(function (element, index) {\n        var parsed = _this6.getParsed(index).r;\n        if (!isNaN(parsed) && _this6.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = this._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / this.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n        var endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this7 = this;\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(_this7.getParsed(index).r) && _this7.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n}(DatasetController);\n_defineProperty(PolarAreaController, \"id\", 'polarArea');\n_defineProperty(PolarAreaController, \"defaults\", {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n});\n_defineProperty(PolarAreaController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var _chart$legend$options3 = chart.legend.options.labels,\n              pointStyle = _chart$legend$options3.pointStyle,\n              color = _chart$legend$options3.color;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n});\nvar PieController = /*#__PURE__*/function (_DoughnutController2) {\n  function PieController() {\n    _classCallCheck(this, PieController);\n    return _callSuper(this, PieController, arguments);\n  }\n  _inherits(PieController, _DoughnutController2);\n  return _createClass(PieController);\n}(DoughnutController);\n_defineProperty(PieController, \"id\", 'pie');\n_defineProperty(PieController, \"defaults\", {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n});\nvar RadarController = /*#__PURE__*/function (_DatasetController7) {\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n    return _callSuper(this, RadarController, arguments);\n  }\n  _inherits(RadarController, _DatasetController7);\n  return _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var vScale = this._cachedMeta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        var options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var scale = this._cachedMeta.rScale;\n      var reset = mode === 'reset';\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n}(DatasetController);\n_defineProperty(RadarController, \"id\", 'radar');\n_defineProperty(RadarController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n});\n_defineProperty(RadarController, \"overrides\", {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n});\nvar ScatterController = /*#__PURE__*/function (_DatasetController8) {\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n    return _callSuper(this, ScatterController, arguments);\n  }\n  _inherits(ScatterController, _DatasetController8);\n  return _createClass(ScatterController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var labels = this.chart.data.labels || [];\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      return {\n        label: labels[index] || '',\n        value: '(' + x + ', ' + y + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var _meta$data2 = meta.data,\n        points = _meta$data2 === void 0 ? [] : _meta$data2;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi2 = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi2.start,\n        count = _getStartAndCountOfVi2.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      if (this.options.showLine) {\n        if (!this.datasetElementType) {\n          this.addElements();\n        }\n        var line = meta.dataset,\n          _dataset = meta._dataset;\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        var options = this.resolveDatasetElementOptions(mode);\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n          animated: !animationsDisabled,\n          options: options\n        }, mode);\n      } else if (this.datasetElementType) {\n        delete meta.dataset;\n        this.datasetElementType = false;\n      }\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var showLine = this.options.showLine;\n      if (!this.datasetElementType && showLine) {\n        this.datasetElementType = this.chart.registry.getElement('line');\n      }\n      _superPropGet(ScatterController, \"addElements\", this, 3)([]);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta4 = this._cachedMeta,\n        iScale = _this$_cachedMeta4.iScale,\n        vScale = _this$_cachedMeta4.vScale,\n        _stacked = _this$_cachedMeta4._stacked,\n        _dataset = _this$_cachedMeta4._dataset;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options3 = this.options,\n        spanGaps = _this$options3.spanGaps,\n        segment = _this$options3.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var data = meta.data || [];\n      if (!this.options.showLine) {\n        var max = 0;\n        for (var i = data.length - 1; i >= 0; --i) {\n          max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n      }\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }]);\n}(DatasetController);\n_defineProperty(ScatterController, \"id\", 'scatter');\n_defineProperty(ScatterController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n});\n_defineProperty(ScatterController, \"overrides\", {\n  interaction: {\n    mode: 'point'\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PieController: PieController,\n  PolarAreaController: PolarAreaController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\nfunction _abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nvar DateAdapterBase = /*#__PURE__*/function () {\n  function DateAdapterBase(options) {\n    _classCallCheck(this, DateAdapterBase);\n    _defineProperty(this, \"options\", void 0);\n    this.options = options || {};\n  }\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  return _createClass(DateAdapterBase, [{\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return _abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      return _abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      return _abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      return _abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff() {\n      return _abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf() {\n      return _abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf() {\n      return _abstract();\n    }\n  }], [{\n    key: \"override\",\n    value:\n    /**\n    * Override default date adapter methods.\n    * Accepts type parameter to define options type.\n    * @example\n    * Chart._adapters._date.override<{myAdapterOption: string}>({\n    *   init() {\n    *     console.log(this.options.myAdapterOption);\n    *   }\n    * })\n    */\n    function override(members) {\n      Object.assign(DateAdapterBase.prototype, members);\n    }\n  }]);\n}();\nvar adapters = {\n  _date: DateAdapterBase\n};\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n    data = metaset.data,\n    _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i],\n      _index2 = _metasets$i.index,\n      data = _metasets$i.data;\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n      lo = _binarySearch.lo,\n      hi = _binarySearch.hi;\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n      if (!element.skip) {\n        handler(element, _index2, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  var items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    var _element$getProps = element.getProps(['startAngle', 'endAngle'], useFinalPosition),\n      startAngle = _element$getProps.startAngle,\n      endAngle = _element$getProps.endAngle;\n    var _getAngleFromPoint = getAngleFromPoint(element, {\n        x: position.x,\n        y: position.y\n      }),\n      angle = _getAngleFromPoint.angle;\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  var items = [];\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    var inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    var center = element.getCenterPoint(useFinalPosition);\n    var pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    var distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  var items = [];\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, function (element, datasetIndex, index) {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems: evaluateInteractionItems,\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      var elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  var stacks = {};\n  var _iterator5 = _createForOfIteratorHelper(layouts),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var wrap = _step5.value;\n      var stack = wrap.stack,\n        pos = wrap.pos,\n        stackWeight = wrap.stackWeight;\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n    hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n    box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n      same = _updateDims.same,\n      other = _updateDims.other;\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n    y = chartArea.y;\n  var _iterator6 = _createForOfIteratorHelper(boxes),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var layout = _step6.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var _height = chartArea.h * weight;\n        var _width = stack.size || box.width;\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, _width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, _width, _height);\n        }\n        stack.start = x;\n        stack.placed += _height;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n  return _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {}\n  }]);\n}();\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n    return _callSuper(this, BasicPlatform, arguments);\n  }\n  _inherits(BasicPlatform, _BasePlatform);\n  return _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      config.options.animation = false;\n    }\n  }]);\n}(BasePlatform);\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var _getRelativePosition = getRelativePosition(event, chart),\n    x = _getRelativePosition.x,\n    y = _getRelativePosition.y;\n  return {\n    type: type,\n    chart: chart,\n    \"native\": event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  var _iterator7 = _createForOfIteratorHelper(nodeList),\n    _step7;\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var node = _step7.value;\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator8 = _createForOfIteratorHelper(entries),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var entry = _step8.value;\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator9 = _createForOfIteratorHelper(entries),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var entry = _step9.value;\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts[\"delete\"](chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n    return _callSuper(this, DomPlatform, arguments);\n  }\n  _inherits(DomPlatform, _BasePlatform2);\n  return _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = canvas && _getParentNode(canvas);\n      return !!(container && container.isConnected);\n    }\n  }]);\n}(BasePlatform);\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n    _defineProperty(this, \"x\", void 0);\n    _defineProperty(this, \"y\", void 0);\n    _defineProperty(this, \"active\", false);\n    _defineProperty(this, \"options\", void 0);\n    _defineProperty(this, \"$animations\", void 0);\n  }\n  return _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps.x,\n        y = _this$getProps.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, _final) {\n      var _this8 = this;\n      var anims = this.$animations;\n      if (!_final || !anims) {\n        // let's not create an object, if not needed\n        return this;\n      }\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : _this8[prop];\n      });\n      return ret;\n    }\n  }]);\n}();\n_defineProperty(Element, \"defaults\", {});\n_defineProperty(Element, \"defaultRoutes\", undefined);\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var determinedMaxTicks = determineMaxTicks(scale);\n  var ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n  var tickLength = scale._tickSize();\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  var factors = _factorize(evenMajorSpacing);\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\nvar getTicksLimit = function getTicksLimit(ticksLength, maxTicksLimit) {\n  return Math.min(maxTicksLimit || ticksLength, ticksLength);\n};\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale: scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n    left = scale.left,\n    bottom = scale.bottom,\n    right = scale.right,\n    chart = scale.chart;\n  var chartArea = chart.chartArea,\n    scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      var _positionAxisID = Object.keys(position)[0];\n      var _value = position[_positionAxisID];\n      titleX = scales[_positionAxisID].getPixelForValue(_value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\nvar Scale = /*#__PURE__*/function (_Element2) {\n  function Scale(cfg) {\n    var _this9;\n    _classCallCheck(this, Scale);\n    _this9 = _callSuper(this, Scale);\n    _this9.id = cfg.id;\n    _this9.type = cfg.type;\n    _this9.options = undefined;\n    _this9.ctx = cfg.ctx;\n    _this9.chart = cfg.chart;\n    _this9.top = undefined;\n    _this9.bottom = undefined;\n    _this9.left = undefined;\n    _this9.right = undefined;\n    _this9.width = undefined;\n    _this9.height = undefined;\n    _this9._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this9.maxWidth = undefined;\n    _this9.maxHeight = undefined;\n    _this9.paddingTop = undefined;\n    _this9.paddingBottom = undefined;\n    _this9.paddingLeft = undefined;\n    _this9.paddingRight = undefined;\n    _this9.axis = undefined;\n    _this9.labelRotation = undefined;\n    _this9.min = undefined;\n    _this9.max = undefined;\n    _this9._range = undefined;\n    _this9.ticks = [];\n    _this9._gridLineItems = null;\n    _this9._labelItems = null;\n    _this9._labelSizes = null;\n    _this9._length = 0;\n    _this9._maxLength = 0;\n    _this9._longestTextCache = {};\n    _this9._startPixel = undefined;\n    _this9._endPixel = undefined;\n    _this9._reversePixels = false;\n    _this9._userMax = undefined;\n    _this9._userMin = undefined;\n    _this9._suggestedMax = undefined;\n    _this9._suggestedMin = undefined;\n    _this9._ticksLength = 0;\n    _this9._borderValue = 0;\n    _this9._cache = {};\n    _this9._dataLimitsCached = false;\n    _this9.$context = undefined;\n    return _this9;\n  }\n  _inherits(Scale, _Element2);\n  return _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n        _userMax = this._userMax,\n        _suggestedMin = this._suggestedMin,\n        _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var _this$getUserBounds = this.getUserBounds(),\n        min = _this$getUserBounds.min,\n        max = _this$getUserBounds.max,\n        minDefined = _this$getUserBounds.minDefined,\n        maxDefined = _this$getUserBounds.maxDefined;\n      var range;\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n      var metas = this.getMatchingVisibleMetas();\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"getLabelItems\",\n    value: function getLabelItems() {\n      var chartArea = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.chart.chartArea;\n      var items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n      return items;\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var _this$options4 = this.options,\n        beginAtZero = _this$options4.beginAtZero,\n        grace = _this$options4.grace,\n        tickOpts = _this$options4.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      var samplingEnabled = sampleSize < this.ticks.length;\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var reversePixels = this.options.reverse;\n      var startPixel, endPixel;\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var tickOpts = this.options.ticks;\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var options = this.options;\n      var tickOpts = options.ticks;\n      var numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n      var labelSizes = this._getLabelSizes();\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n      var maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      this.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {}\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = this.chart,\n        _this$options5 = this.options,\n        tickOpts = _this$options5.ticks,\n        titleOpts = _this$options5.title,\n        gridOpts = _this$options5.grid;\n      var display = this._isVisible();\n      var isHorizontal = this.isHorizontal();\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && this.ticks.length) {\n          var _this$_getLabelSizes = this._getLabelSizes(),\n            first = _this$_getLabelSizes.first,\n            last = _this$_getLabelSizes.last,\n            widest = _this$_getLabelSizes.widest,\n            highest = _this$_getLabelSizes.highest;\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(this.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n      this._handleMargins();\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var _this$options6 = this.options,\n        _this$options6$ticks = _this$options6.ticks,\n        align = _this$options6$ticks.align,\n        padding = _this$options6$ticks.padding,\n        position = _this$options6.position;\n      var isRotated = this.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && this.axis === 'x';\n      if (this.isHorizontal()) {\n        var offsetLeft = this.getPixelForTick(0) - this.left;\n        var offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options7 = this.options,\n        axis = _this$options7.axis,\n        position = _this$options7.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      var i, ilen;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n      this.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var labelSizes = this._labelSizes;\n      if (!labelSizes) {\n        var sampleSize = this.options.ticks.sampleSize;\n        var ticks = this.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n      }\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length, maxTicksLimit) {\n      var ctx = this.ctx,\n        caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; i += increment) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      var pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n        max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var ticks = this.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var optionTicks = this.options.ticks;\n      var rot = toRadians(this.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var labelSizes = this._getLabelSizes();\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var axis = this.axis;\n      var chart = this.chart;\n      var options = this.options;\n      var grid = options.grid,\n        position = options.position,\n        border = options.border;\n      var offset = grid.offset;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = border.setContext(this.getContext());\n      var axisWidth = borderOpts.display ? borderOpts.width : 0;\n      var axisHalfWidth = axisWidth / 2;\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          borderValue = alignBorderValue(this.chart.scales[_positionAxisID2].getPixelForValue(_value2));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n      for (i = 0; i < ticksLength; i += step) {\n        var context = this.getContext(i);\n        var optsAtIndex = grid.setContext(context);\n        var optsAtIndexBorder = border.setContext(context);\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = optsAtIndexBorder.dash || [];\n        var borderDashOffset = optsAtIndexBorder.dashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var axis = this.axis;\n      var options = this.options;\n      var position = options.position,\n        optionTicks = options.ticks;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var align = optionTicks.align,\n        crossAlign = optionTicks.crossAlign,\n        padding = optionTicks.padding,\n        mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(this.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = this._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = this._getYAxisLabelAlignment(tl);\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID3 = Object.keys(position)[0];\n          var _value3 = position[_positionAxisID3];\n          x = this.chart.scales[_positionAxisID3].getPixelForValue(_value3);\n        }\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      var labelSizes = this._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        var tickTextAlign = textAlign;\n        if (isHorizontal) {\n          x = pixel;\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n          if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n            x += lineHeight / 2 * Math.sin(rotation);\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        var backdrop = void 0;\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = textOffset - labelPadding.top;\n          var left = 0 - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n            case 'inner':\n              if (i === ilen - 1) {\n                left -= width;\n              } else if (i > 0) {\n                left -= width / 2;\n              }\n              break;\n          }\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          label: label,\n          font: font,\n          textOffset: textOffset,\n          options: {\n            rotation: rotation,\n            color: color,\n            strokeColor: strokeColor,\n            strokeWidth: strokeWidth,\n            textAlign: tickTextAlign,\n            textBaseline: textBaseline,\n            translation: [x, y],\n            backdrop: backdrop\n          }\n        });\n      }\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var _this$options8 = this.options,\n        position = _this$options8.position,\n        ticks = _this$options8.ticks;\n      var rotation = -toRadians(this.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      var align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var _this$options9 = this.options,\n        position = _this$options9.position,\n        _this$options9$ticks = _this$options9.ticks,\n        crossAlign = _this$options9$ticks.crossAlign,\n        mirror = _this$options9$ticks.mirror,\n        padding = _this$options9$ticks.padding;\n      var labelSizes = this._getLabelSizes();\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n      var chart = this.chart;\n      var position = this.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n        backgroundColor = this.options.backgroundColor,\n        left = this.left,\n        top = this.top,\n        width = this.width,\n        height = this.height;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var grid = this.options.grid;\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n      var ticks = this.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n      if (index >= 0) {\n        var opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var grid = this.options.grid;\n      var ctx = this.ctx;\n      var items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n      var i, ilen;\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var chart = this.chart,\n        ctx = this.ctx,\n        _this$options10 = this.options,\n        border = _this$options10.border,\n        grid = _this$options10.grid;\n      var borderOpts = border.setContext(this.getContext());\n      var axisWidth = border.display ? borderOpts.width : 0;\n      if (!axisWidth) {\n        return;\n      }\n      var lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      var borderValue = this._borderValue;\n      var x1, x2, y1, y2;\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.width;\n      ctx.strokeStyle = borderOpts.color;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var optionTicks = this.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      var ctx = this.ctx;\n      var area = this._computeLabelArea();\n      if (area) {\n        clipArea(ctx, area);\n      }\n      var items = this.getLabelItems(chartArea);\n      var _iterator10 = _createForOfIteratorHelper(items),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var item = _step10.value;\n          var renderTextOptions = item.options;\n          var tickFont = item.font;\n          var label = item.label;\n          var y = item.textOffset;\n          renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n        _this$options11 = this.options,\n        position = _this$options11.position,\n        title = _this$options11.title,\n        reverse = _this$options11.reverse;\n      if (!title.display) {\n        return;\n      }\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      var _titleArgs = titleArgs(this, offset, position, align),\n        titleX = _titleArgs.titleX,\n        titleY = _titleArgs.titleY,\n        maxWidth = _titleArgs.maxWidth,\n        rotation = _titleArgs.rotation;\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var _this10 = this;\n      var opts = this.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n      var bz = valueOrDefault(opts.border && opts.border.z, 0);\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            _this10.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          _this10.drawBackground();\n          _this10.drawGrid(chartArea);\n          _this10.drawTitle();\n        }\n      }, {\n        z: bz,\n        draw: function draw() {\n          _this10.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          _this10.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var metas = this.chart.getSortedVisibleDatasetMetas();\n      var axisID = this.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var fontSize = this._resolveTickFontOptions(0).lineHeight;\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }]);\n}(Element);\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  return _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n}();\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  return _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var _this11 = this;\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || _this11._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === _this11.plugins && arg.id) {\n          _this11._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || _this11._getRegistryForType(item);\n            _this11._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }]);\n}();\nvar registry = /* #__PURE__ */new Registry();\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n    this._init = [];\n  }\n  return _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n        this._notify(this._init, chart, 'install');\n      }\n      var descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n      var result = this._notify(descriptors, chart, hook, args);\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n        this._notify(this._init, chart, 'uninstall');\n      }\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iterator11 = _createForOfIteratorHelper(descriptors),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var descriptor = _step11.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      var descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n}();\nfunction allPlugins(config) {\n  var localIds = {};\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  var local = config.plugins || [];\n  for (var _i2 = 0; _i2 < local.length; _i2++) {\n    var plugin = local[_i2];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {\n    plugins: plugins,\n    localIds: localIds\n  };\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, _ref2, options, all) {\n  var plugins = _ref2.plugins,\n    localIds = _ref2.localIds;\n  var result = [];\n  var context = chart.getContext();\n  var _iterator12 = _createForOfIteratorHelper(plugins),\n    _step12;\n  try {\n    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n      var plugin = _step12.value;\n      var id = plugin.id;\n      var opts = getOpts(options[id], all);\n      if (opts === null) {\n        continue;\n      }\n      result.push({\n        plugin: plugin,\n        options: pluginOpts(chart.config, {\n          plugin: plugin,\n          local: localIds[id]\n        }, opts, context)\n      });\n    }\n  } catch (err) {\n    _iterator12.e(err);\n  } finally {\n    _iterator12.f();\n  }\n  return result;\n}\nfunction pluginOpts(config, _ref3, opts, context) {\n  var plugin = _ref3.plugin,\n    local = _ref3.local;\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (var _len11 = arguments.length, scaleOptions = new Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n    scaleOptions[_key11 - 1] = arguments[_key11];\n  }\n  for (var _i3 = 0, _scaleOptions = scaleOptions; _i3 < _scaleOptions.length; _i3++) {\n    var opts = _scaleOptions[_i3];\n    var axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(\"Cannot determine type of '\".concat(id, \"' axis. Please provide 'axis' or 'position' option.\"));\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {\n      axis: axis\n    };\n  }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    var boundDs = config.data.datasets.filter(function (d) {\n      return d.xAxisID === id || d.yAxisID === id;\n    });\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n    var axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nvar keyCache = new Map();\nvar keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  return _createClass(Config, [{\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n      var cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n        type = this.type;\n      var cache = this._cachedScopes(mainScope, resetCache);\n      var cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n        type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver.resolver,\n        subPrefixes = _getResolver.subPrefixes;\n      var options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n      var _iterator13 = _createForOfIteratorHelper(names),\n        _step13;\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var prop = _step13.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver2.resolver;\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n}();\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nvar hasFunction = function hasFunction(value) {\n  return isObject(value) && Object.getOwnPropertyNames(value).some(function (key) {\n    return isFunction(value[key]);\n  });\n};\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n    isScriptable = _descriptors2.isScriptable,\n    isIndexable = _descriptors2.isIndexable;\n  var _iterator14 = _createForOfIteratorHelper(names),\n    _step14;\n  try {\n    for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n      var prop = _step14.value;\n      var scriptable = isScriptable(prop);\n      var indexable = isIndexable(prop);\n      var value = (indexable || scriptable) && proxy[prop];\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator14.e(err);\n  } finally {\n    _iterator14.f();\n  }\n  return false;\n}\nvar version = \"4.4.5\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nvar instances = {};\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  var keys = Object.keys(obj);\n  for (var _i4 = 0, _keys = keys; _i4 < _keys.length; _i4++) {\n    var key = _keys[_i4];\n    var intKey = +key;\n    if (intKey >= start) {\n      var value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n  var xScale = meta.xScale,\n    yScale = meta.yScale;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, userConfig) {\n    var _this12 = this;\n    _classCallCheck(this, Chart);\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n    var options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    var context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function (mode) {\n      return _this12.update(mode);\n    }, options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  return _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options12 = this.options,\n        aspectRatio = _this$options12.aspectRatio,\n        maintainAspectRatio = _this$options12.maintainAspectRatio,\n        width = this.width,\n        height = this.height,\n        _aspectRatio = this._aspectRatio;\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"registry\",\n    get: function get() {\n      return registry;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      this.notifyPlugins('beforeInit');\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var options = this.options;\n      var canvas = this.canvas;\n      var aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      var newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      var mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var _this13 = this;\n      var options = this.options;\n      var scaleOpts = options.scales;\n      var scales = this.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        var scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: _this13.ctx,\n            chart: _this13\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(_this13, scale, scale.options);\n        layouts.addBox(_this13, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var metasets = this._metasets;\n      var numData = this.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var _this14 = this;\n      var metasets = this._metasets,\n        datasets = this.data.datasets;\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          _this14._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var newControllers = [];\n      var datasets = this.data.datasets;\n      var i, ilen;\n      this._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = this.getDatasetMeta(i);\n        var type = dataset.type || this.config.type;\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n          meta = this.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n            datasetElementType = _defaults$datasets$ty.datasetElementType,\n            dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      this._updateMetasets();\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var _this15 = this;\n      each(this.data.datasets, function (dataset, datasetIndex) {\n        _this15.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var config = this.config;\n      config.update();\n      var options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      var animsDisabled = this._animationsDisabled = !options.animation;\n      this._updateScales();\n      this._checkEventBindings();\n      this._updateHiddenIndices();\n      this._plugins.invalidate();\n      if (this.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        var _this$getDatasetMeta = this.getDatasetMeta(i),\n          controller = _this$getDatasetMeta.controller;\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n      this._updateLayout(minPadding);\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n      this._updateDatasets(mode);\n      this.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n      this._layers.sort(compare2Level('z', '_idx'));\n      var _active = this._active,\n        _lastEvent = this._lastEvent;\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n      this.render();\n    }\n  }, {\n    key: \"_updateScales\",\n    value: function _updateScales() {\n      var _this16 = this;\n      each(this.scales, function (scale) {\n        layouts.removeBox(_this16, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n  }, {\n    key: \"_checkEventBindings\",\n    value: function _checkEventBindings() {\n      var options = this.options;\n      var existingEvents = new Set(Object.keys(this._listeners));\n      var newEvents = new Set(options.events);\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"_updateHiddenIndices\",\n    value: function _updateHiddenIndices() {\n      var _hiddenIndices = this._hiddenIndices;\n      var changes = this._getUniformDataChanges() || [];\n      var _iterator15 = _createForOfIteratorHelper(changes),\n        _step15;\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var _step15$value = _step15.value,\n            method = _step15$value.method,\n            start = _step15$value.start,\n            count = _step15$value.count;\n          var move = method === '_removeElements' ? -count : count;\n          moveNumericKeys(_hiddenIndices, start, move);\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n    }\n  }, {\n    key: \"_getUniformDataChanges\",\n    value: function _getUniformDataChanges() {\n      var _dataChanges = this._dataChanges;\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n      this._dataChanges = [];\n      var datasetCount = this.data.datasets.length;\n      var makeSet = function makeSet(idx) {\n        return new Set(_dataChanges.filter(function (c) {\n          return c[0] === idx;\n        }).map(function (c, i) {\n          return i + ',' + c.splice(1).join(',');\n        }));\n      };\n      var changeSet = makeSet(0);\n      for (var i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n      return Array.from(changeSet).map(function (c) {\n        return c.split(',');\n      }).map(function (a) {\n        return {\n          method: a[1],\n          start: +a[2],\n          count: +a[3]\n        };\n      });\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var _this17 = this;\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(this, this.width, this.height, minPadding);\n      var area = this.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, function (box) {\n        var _this17$_layers;\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        (_this17$_layers = _this17._layers).push.apply(_this17$_layers, _toConsumableArray(box._layers()));\n      }, this);\n      this._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n      this.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n      for (var _i5 = 0, _ilen = this.data.datasets.length; _i5 < _ilen; ++_i5) {\n        this._updateDataset(_i5, isFunction(mode) ? mode({\n          datasetIndex: _i5\n        }) : mode);\n      }\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var meta = this.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var i;\n      if (this._resizeBeforeDraw) {\n        var _this$_resizeBeforeDr = this._resizeBeforeDraw,\n          width = _this$_resizeBeforeDr.width,\n          height = _this$_resizeBeforeDr.height;\n        this._resizeBeforeDraw = null;\n        this._resize(width, height);\n      }\n      this.clear();\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var layers = this._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var metasets = this._sortedMetasets;\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var metasets = this.getSortedVisibleDatasetMetas();\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var ctx = this.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = getDatasetArea(meta, this.chartArea);\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n      meta.controller.draw();\n      if (useClip) {\n        unclipArea(ctx);\n      }\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"isPointInArea\",\n    value: function isPointInArea(point) {\n      return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      var metasets = this._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var mode = visible ? 'show' : 'hide';\n      var meta = this.getDatasetMeta(datasetIndex);\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        this.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var meta = this._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n      delete this._metasets[datasetIndex];\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      var i, ilen;\n      this.stop();\n      animator.remove(this);\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.notifyPlugins('beforeDestroy');\n      var canvas = this.canvas,\n        ctx = this.ctx;\n      this._stop();\n      this.config.clearCache();\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var _this18 = this;\n      var listeners = this._listeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this18, type, listener);\n        listeners[type] = listener;\n      };\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n        _this18._eventHandler(e);\n      };\n      each(this.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var _this19 = this;\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n      var listeners = this._responsiveListeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this19, type, listener);\n        listeners[type] = listener;\n      };\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(_this19, type, listener);\n          delete listeners[type];\n        }\n      };\n      var listener = function listener(width, height) {\n        if (_this19.canvas) {\n          _this19.resize(width, height);\n        }\n      };\n      var detached;\n      var _attached = function attached() {\n        _remove('attach', _attached);\n        _this19.attached = true;\n        _this19.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = function detached() {\n        _this19.attached = false;\n        _remove('resize', listener);\n        _this19._stop();\n        _this19._resize(0, 0);\n        _add('attach', _attached);\n      };\n      if (platform.isAttached(this.canvas)) {\n        _attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this20 = this;\n      each(this._listeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var _this21 = this;\n      var lastActive = this._active || [];\n      var active = activeElements.map(function (_ref4) {\n        var datasetIndex = _ref4.datasetIndex,\n          index = _ref4.index;\n        var meta = _this21.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"isPluginEnabled\",\n    value: function isPluginEnabled(pluginId) {\n      return this._plugins._cache.filter(function (p) {\n        return p.plugin.id === pluginId;\n      }).length === 1;\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var hoverOptions = this.options.hover;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this22 = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this22.options.events).includes(e[\"native\"].type);\n      };\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      var changed = this._handleEvent(e, replay, args.inChartArea);\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        this.render();\n      }\n      return this;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay, inChartArea) {\n      var _this$_active = this._active,\n        lastActive = _this$_active === void 0 ? [] : _this$_active,\n        options = this.options;\n      var useFinalPosition = replay;\n      var active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n      var isClick = _isClickEvent(e);\n      var lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed || replay) {\n        this._active = active;\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }], [{\n    key: \"register\",\n    value: function register() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }]);\n}();\n_defineProperty(Chart, \"defaults\", defaults);\n_defineProperty(Chart, \"instances\", instances);\n_defineProperty(Chart, \"overrides\", overrides);\n_defineProperty(Chart, \"registry\", registry);\n_defineProperty(Chart, \"version\", version);\n_defineProperty(Chart, \"getChart\", getChart);\nfunction invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n}\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    x = element.x,\n    y = element.y,\n    outerRadius = element.outerRadius,\n    innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  var x = element.x,\n    y = element.y,\n    start = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n    outerStart = _parseBorderRadius$.outerStart,\n    outerEnd = _parseBorderRadius$.outerEnd,\n    innerStart = _parseBorderRadius$.innerStart,\n    innerEnd = _parseBorderRadius$.innerEnd;\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    var outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    // The line from point 3 to point 4\n    var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    // The inner arc from point 5 to point b to point 6\n    var innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    // The line from point 7 to point 8\n    var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    var outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    var outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    var outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    var outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference;\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference,\n    options = element.options;\n  var borderWidth = options.borderWidth,\n    borderJoinStyle = options.borderJoinStyle,\n    borderDash = options.borderDash,\n    borderDashOffset = options.borderDashOffset;\n  var inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\nvar ArcElement = /*#__PURE__*/function (_Element3) {\n  function ArcElement(cfg) {\n    var _this23;\n    _classCallCheck(this, ArcElement);\n    _this23 = _callSuper(this, ArcElement);\n    _defineProperty(_this23, \"circumference\", void 0);\n    _defineProperty(_this23, \"endAngle\", void 0);\n    _defineProperty(_this23, \"fullCircles\", void 0);\n    _defineProperty(_this23, \"innerRadius\", void 0);\n    _defineProperty(_this23, \"outerRadius\", void 0);\n    _defineProperty(_this23, \"pixelMargin\", void 0);\n    _defineProperty(_this23, \"startAngle\", void 0);\n    _this23.options = undefined;\n    _this23.circumference = undefined;\n    _this23.startAngle = undefined;\n    _this23.endAngle = undefined;\n    _this23.innerRadius = undefined;\n    _this23.outerRadius = undefined;\n    _this23.pixelMargin = 0;\n    _this23.fullCircles = 0;\n    if (cfg) {\n      Object.assign(_this23, cfg);\n    }\n    return _this23;\n  }\n  _inherits(ArcElement, _Element3);\n  return _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n      var _getAngleFromPoint2 = getAngleFromPoint(point, {\n          x: chartX,\n          y: chartY\n        }),\n        angle = _getAngleFromPoint2.angle,\n        distance = _getAngleFromPoint2.distance;\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        startAngle = _this$getProps2.startAngle,\n        endAngle = _this$getProps2.endAngle,\n        innerRadius = _this$getProps2.innerRadius,\n        outerRadius = _this$getProps2.outerRadius,\n        circumference = _this$getProps2.circumference;\n      var rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n      var _circumference = valueOrDefault(circumference, endAngle - startAngle);\n      var nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n      var betweenAngles = _circumference >= TAU || nonZeroBetween;\n      var withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius'], useFinalPosition),\n        x = _this$getProps3.x,\n        y = _this$getProps3.y,\n        startAngle = _this$getProps3.startAngle,\n        endAngle = _this$getProps3.endAngle,\n        innerRadius = _this$getProps3.innerRadius,\n        outerRadius = _this$getProps3.outerRadius;\n      var _this$options13 = this.options,\n        offset = _this$options13.offset,\n        spacing = _this$options13.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options,\n        circumference = this.circumference;\n      var offset = (options.offset || 0) / 4;\n      var spacing = (options.spacing || 0) / 2;\n      var circular = options.circular;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      var halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n      var fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n      var radiusOffset = offset * fix;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      drawArc(ctx, this, radiusOffset, spacing, circular);\n      drawBorder(ctx, this, radiusOffset, spacing, circular);\n      ctx.restore();\n    }\n  }]);\n}(Element);\n_defineProperty(ArcElement, \"id\", 'arc');\n_defineProperty(ArcElement, \"defaults\", {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n});\n_defineProperty(ArcElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor'\n});\n_defineProperty(ArcElement, \"descriptors\", {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash';\n  }\n});\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n    paramsStart = _params$start === void 0 ? 0 : _params$start,\n    _params$end = params.end,\n    paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n    segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n    options = line.options;\n  var _pathVars = pathVars(points, segment, params),\n    count = _pathVars.count,\n    start = _pathVars.start,\n    loop = _pathVars.loop,\n    ilen = _pathVars.ilen;\n  var lineMethod = getLineMethod(options);\n  var _ref5 = params || {},\n    _ref5$move = _ref5.move,\n    move = _ref5$move === void 0 ? true : _ref5$move,\n    reverse = _ref5.reverse;\n  var i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n  var _pathVars2 = pathVars(points, segment, params),\n    count = _pathVars2.count,\n    start = _pathVars2.start,\n    ilen = _pathVars2.ilen;\n  var _ref6 = params || {},\n    _ref6$move = _ref6.move,\n    move = _ref6$move === void 0 ? true : _ref6$move,\n    reverse = _ref6.reverse;\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n    options = line.options;\n  var segmentMethod = _getSegmentMethod(line);\n  var _iterator16 = _createForOfIteratorHelper(segments),\n    _step16;\n  try {\n    for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n      var segment = _step16.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator16.e(err);\n  } finally {\n    _iterator16.f();\n  }\n}\nvar usePath2D = typeof Path2D === 'function';\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nvar LineElement = /*#__PURE__*/function (_Element4) {\n  function LineElement(cfg) {\n    var _this24;\n    _classCallCheck(this, LineElement);\n    _this24 = _callSuper(this, LineElement);\n    _this24.animated = true;\n    _this24.options = undefined;\n    _this24._chart = undefined;\n    _this24._loop = undefined;\n    _this24._fullLoop = undefined;\n    _this24._path = undefined;\n    _this24._points = undefined;\n    _this24._segments = undefined;\n    _this24._decimated = false;\n    _this24._pointsUpdated = false;\n    _this24._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(_this24, cfg);\n    }\n    return _this24;\n  }\n  _inherits(LineElement, _Element4);\n  return _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var options = this.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        var loop = options.spanGaps ? this._loop : this._fullLoop;\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n        this._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var options = this.options;\n      var value = point[property];\n      var points = this.points;\n      var segments = _boundSegments(this, {\n        property: property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      var result = [];\n      var _interpolate = _getInterpolationMethod(options);\n      var i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n          start = _segments$i.start,\n          end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var segments = this.segments;\n      var segmentMethod = _getSegmentMethod(this);\n      var loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n      var _iterator17 = _createForOfIteratorHelper(segments),\n        _step17;\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var segment = _step17.value;\n          loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var options = this.options || {};\n      var points = this.points || [];\n      if (points.length && options.borderWidth) {\n        ctx.save();\n        _draw(ctx, this, start, count);\n        ctx.restore();\n      }\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }]);\n}(Element);\n_defineProperty(LineElement, \"id\", 'line');\n_defineProperty(LineElement, \"defaults\", {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n});\n_defineProperty(LineElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n_defineProperty(LineElement, \"descriptors\", {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n});\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n    value = _el$getProps[axis];\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nvar PointElement = /*#__PURE__*/function (_Element5) {\n  function PointElement(cfg) {\n    var _this25;\n    _classCallCheck(this, PointElement);\n    _this25 = _callSuper(this, PointElement);\n    _defineProperty(_this25, \"parsed\", void 0);\n    _defineProperty(_this25, \"skip\", void 0);\n    _defineProperty(_this25, \"stop\", void 0);\n    _this25.options = undefined;\n    _this25.parsed = undefined;\n    _this25.skip = undefined;\n    _this25.stop = undefined;\n    if (cfg) {\n      Object.assign(_this25, cfg);\n    }\n    return _this25;\n  }\n  _inherits(PointElement, _Element5);\n  return _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps4.x,\n        y = _this$getProps4.y;\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps5.x,\n        y = _this$getProps5.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var options = this.options;\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      // @ts-expect-error Fallbacks should never be hit in practice\n      return options.radius + options.hitRadius;\n    }\n  }]);\n}(Element);\n_defineProperty(PointElement, \"id\", 'point');\n/**\n* @type {any}\n*/\n_defineProperty(PointElement, \"defaults\", {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n});\n/**\n* @type {any}\n*/\n_defineProperty(PointElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n    x = _bar$getProps.x,\n    y = _bar$getProps.y,\n    base = _bar$getProps.base,\n    width = _bar$getProps.width,\n    height = _bar$getProps.height;\n  var left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n    enableBorderRadius = _bar$getProps2.enableBorderRadius;\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nvar BarElement = /*#__PURE__*/function (_Element6) {\n  function BarElement(cfg) {\n    var _this26;\n    _classCallCheck(this, BarElement);\n    _this26 = _callSuper(this, BarElement);\n    _this26.options = undefined;\n    _this26.horizontal = undefined;\n    _this26.base = undefined;\n    _this26.width = undefined;\n    _this26.height = undefined;\n    _this26.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(_this26, cfg);\n    }\n    return _this26;\n  }\n  _inherits(BarElement, _Element6);\n  return _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var inflateAmount = this.inflateAmount,\n        _this$options14 = this.options,\n        borderColor = _this$options14.borderColor,\n        backgroundColor = _this$options14.backgroundColor;\n      var _boundingRects = boundingRects(this),\n        inner = _boundingRects.inner,\n        outer = _boundingRects.outer;\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n        x = _this$getProps6.x,\n        y = _this$getProps6.y,\n        base = _this$getProps6.base,\n        horizontal = _this$getProps6.horizontal;\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n}(Element);\n_defineProperty(BarElement, \"id\", 'bar');\n_defineProperty(BarElement, \"defaults\", {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n});\n_defineProperty(BarElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  BarElement: BarElement,\n  LineElement: LineElement,\n  PointElement: PointElement\n});\nvar BORDER_COLORS = ['rgb(54, 162, 235)', 'rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nvar BACKGROUND_COLORS = /* #__PURE__ */BORDER_COLORS.map(function (color) {\n  return color.replace('rgb(', 'rgba(').replace(')', ', 0.5)');\n});\nfunction getBorderColor(i) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n  return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(function () {\n    return getBorderColor(i++);\n  });\n  return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(function () {\n    return getBackgroundColor(i++);\n  });\n  return i;\n}\nfunction getColorizer(chart) {\n  var i = 0;\n  return function (dataset, datasetIndex) {\n    var controller = chart.getDatasetMeta(datasetIndex).controller;\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\nfunction containsColorsDefinitions(descriptors) {\n  var k;\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction containsColorsDefinition(descriptor) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n  id: 'colors',\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  },\n  beforeLayout: function beforeLayout(chart, _args, options) {\n    if (!options.enabled) {\n      return;\n    }\n    var _chart$config = chart.config,\n      datasets = _chart$config.data.datasets,\n      chartOptions = _chart$config.options;\n    var elements = chartOptions.elements;\n    var containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n    var colorizer = getColorizer(chart);\n    datasets.forEach(colorizer);\n  }\n};\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n      pointAx = _data$a.x,\n      pointAy = _data$a.y;\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n  var _iScale$getUserBounds = iScale.getUserBounds(),\n    min = _iScale$getUserBounds.min,\n    max = _iScale$getUserBounds.max,\n    minDefined = _iScale$getUserBounds.minDefined,\n    maxDefined = _iScale$getUserBounds.maxDefined;\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n        indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      var xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      var _getStartAndCountOfVi3 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n        start = _getStartAndCountOfVi3.start,\n        count = _getStartAndCountOfVi3.count;\n      var threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n      var decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iterator18 = _createForOfIteratorHelper(segments),\n    _step18;\n  try {\n    for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n      var segment = _step18.value;\n      var start = segment.start,\n        end = segment.end;\n      end = _findSegmentEnd(start, end, points);\n      var bounds = _getBounds(property, points[start], points[end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n      var targetSegments = _boundSegments(target, bounds);\n      var _iterator19 = _createForOfIteratorHelper(targetSegments),\n        _step19;\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var tgt = _step19.value;\n          var subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n          var fillSources = _boundSegment(segment, points, subBounds);\n          var _iterator20 = _createForOfIteratorHelper(fillSources),\n            _step20;\n          try {\n            for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n              var fillSource = _step20.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator20.e(err);\n          } finally {\n            _iterator20.f();\n          }\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n    }\n  } catch (err) {\n    _iterator18.e(err);\n  } finally {\n    _iterator18.f();\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  var start = first[property];\n  var end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\nfunction _pointsFromSegments(boundary, line) {\n  var _ref7 = boundary || {},\n    _ref7$x = _ref7.x,\n    x = _ref7$x === void 0 ? null : _ref7$x,\n    _ref7$y = _ref7.y,\n    y = _ref7$y === void 0 ? null : _ref7$y;\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref8) {\n    var start = _ref8.start,\n      end = _ref8.end;\n    end = _findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\nfunction _resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  var target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  var pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  var value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction _buildStackLine(source) {\n  var scale = source.scale,\n    index = source.index,\n    line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\nfunction getLinesBelow(scale, index) {\n  var below = [];\n  var metas = scale.getMatchingVisibleMetas('line');\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n      first = _findPoint.first,\n      last = _findPoint.last,\n      point = _findPoint.point;\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push.apply(points, postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  return _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n}();\nfunction _getTarget(source) {\n  var chart = source.chart,\n    fill = source.fill,\n    line = source.line;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  var boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n    scale = _source$scale === void 0 ? {} : _source$scale,\n    fill = source.fill;\n  var pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    var horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n    fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var start = options.reverse ? scale.max : scale.min;\n  var value = _getTargetValue(fill, scale, start);\n  var target = [];\n  if (options.grid.circular) {\n    var center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (var i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction _drawfill(ctx, source, area) {\n  var target = _getTarget(source);\n  var line = source.line,\n    scale = source.scale,\n    axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n  var _ref9 = fillOption || {},\n    _ref9$above = _ref9.above,\n    above = _ref9$above === void 0 ? color : _ref9$above,\n    _ref9$below = _ref9.below,\n    below = _ref9$below === void 0 ? color : _ref9$below;\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    above = cfg.above,\n    below = cfg.below,\n    area = cfg.area,\n    scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  var segments = target.segments,\n    points = target.points;\n  var first = true;\n  var lineLoop = false;\n  ctx.beginPath();\n  var _iterator21 = _createForOfIteratorHelper(segments),\n    _step21;\n  try {\n    for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n      var segment = _step21.value;\n      var start = segment.start,\n        end = segment.end;\n      var firstPoint = points[start];\n      var lastPoint = points[_findSegmentEnd(start, end, points)];\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n  } catch (err) {\n    _iterator21.e(err);\n  } finally {\n    _iterator21.f();\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    property = cfg.property,\n    color = cfg.color,\n    scale = cfg.scale;\n  var segments = _segments(line, target, property);\n  var _iterator22 = _createForOfIteratorHelper(segments),\n    _step22;\n  try {\n    for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n      var _step22$value = _step22.value,\n        src = _step22$value.source,\n        tgt = _step22$value.target,\n        start = _step22$value.start,\n        end = _step22$value.end;\n      var _src$style = src.style,\n        _src$style2 = _src$style === void 0 ? {} : _src$style,\n        _src$style2$backgroun = _src$style2.backgroundColor,\n        backgroundColor = _src$style2$backgroun === void 0 ? color : _src$style2$backgroun;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator22.e(err);\n  } finally {\n    _iterator22.f();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n    top = _scale$chart$chartAre.top,\n    bottom = _scale$chart$chartAre.bottom;\n  var _ref10 = bounds || {},\n    property = _ref10.property,\n    start = _ref10.start,\n    end = _ref10.end;\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n    boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n    _labelOpts$boxWidth = labelOpts.boxWidth,\n    boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\nvar Legend = /*#__PURE__*/function (_Element7) {\n  function Legend(config) {\n    var _this27;\n    _classCallCheck(this, Legend);\n    _this27 = _callSuper(this, Legend);\n    _this27._added = false;\n    _this27.legendHitBoxes = [];\n    _this27._hoveredItem = null;\n    _this27.doughnutMode = false;\n    _this27.chart = config.chart;\n    _this27.options = config.options;\n    _this27.ctx = config.ctx;\n    _this27.legendItems = undefined;\n    _this27.columnSizes = undefined;\n    _this27.lineWidths = undefined;\n    _this27.maxHeight = undefined;\n    _this27.maxWidth = undefined;\n    _this27.top = undefined;\n    _this27.bottom = undefined;\n    _this27.left = undefined;\n    _this27.right = undefined;\n    _this27.height = undefined;\n    _this27.width = undefined;\n    _this27._margins = undefined;\n    _this27.position = undefined;\n    _this27.weight = undefined;\n    _this27.fullSize = undefined;\n    return _this27;\n  }\n  _inherits(Legend, _Element7);\n  return _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var _this28 = this;\n      var labelOpts = this.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, _this28.chart.data);\n        });\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, _this28.chart.data);\n        });\n      }\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n      this.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var options = this.options,\n        ctx = this.ctx;\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n      var titleHeight = this._computeTitleHeight();\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize.boxWidth,\n        itemHeight = _getBoxSize.itemHeight;\n      var width, height;\n      ctx.font = labelFont.string;\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n      }\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n        maxWidth = this.maxWidth,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var lineWidths = this.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n      var ctx = this.ctx,\n        maxHeight = this.maxHeight,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var columnSizes = this.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      this.legendItems.forEach(function (legendItem, i) {\n        var _calculateItemSize = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight),\n          itemWidth = _calculateItemSize.itemWidth,\n          itemHeight = _calculateItemSize.itemHeight;\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n      var titleHeight = this._computeTitleHeight();\n      var hitboxes = this.legendHitBoxes,\n        _this$options15 = this.options,\n        align = _this$options15.align,\n        padding = _this$options15.labels.padding,\n        rtl = _this$options15.rtl;\n      var rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n      if (this.isHorizontal()) {\n        var row = 0;\n        var left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        var _iterator23 = _createForOfIteratorHelper(hitboxes),\n          _step23;\n        try {\n          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n            var hitbox = _step23.value;\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            }\n            hitbox.top += this.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator23.e(err);\n        } finally {\n          _iterator23.f();\n        }\n      } else {\n        var col = 0;\n        var top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        var _iterator24 = _createForOfIteratorHelper(hitboxes),\n          _step24;\n        try {\n          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n            var _hitbox = _step24.value;\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            }\n            _hitbox.top = top;\n            _hitbox.left += this.left + padding;\n            _hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(_hitbox.left), _hitbox.width);\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator24.e(err);\n        } finally {\n          _iterator24.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (this.options.display) {\n        var ctx = this.ctx;\n        clipArea(ctx, this);\n        this._draw();\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _this29 = this;\n      var opts = this.options,\n        columnSizes = this.columnSizes,\n        lineWidths = this.lineWidths,\n        ctx = this.ctx;\n      var align = opts.align,\n        labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var labelFont = toFont(labelOpts.font);\n      var padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize2.boxWidth,\n        boxHeight = _getBoxSize2.boxHeight,\n        itemHeight = _getBoxSize2.itemHeight;\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxHeight * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n      var isHorizontal = this.isHorizontal();\n      var titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      overrideTextDirection(this.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      this.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor;\n        ctx.fillStyle = legendItem.fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(_this29.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > _this29.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, _this29.left + padding, _this29.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > _this29.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, _this29.top + titleHeight + padding, _this29.bottom - columnSizes[cursor.line].height);\n        }\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : _this29.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else if (typeof legendItem.text !== 'string') {\n          var fontLineHeight = labelFont.lineHeight;\n          cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var opts = this.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var ctx = this.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = this.left;\n      var maxWidth = this.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(this.lineWidths));\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        var maxHeight = this.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n      var x = _alignStartEnd(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var i, hitBox, lh;\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var opts = this.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      var hoveredItem = this._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        var previous = this._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n        this._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }]);\n}(Element);\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  var itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  var itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {\n    itemWidth: itemWidth,\n    itemHeight: itemHeight\n  };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  var legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce(function (a, b) {\n      return a.length > b.length ? a : b;\n    });\n  }\n  return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  var itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  var labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n          usePointStyle = _chart$legend$options.usePointStyle,\n          pointStyle = _chart$legend$options.pointStyle,\n          textAlign = _chart$legend$options.textAlign,\n          color = _chart$legend$options.color,\n          useBorderRadius = _chart$legend$options.useBorderRadius,\n          borderRadius = _chart$legend$options.borderRadius;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\nvar Title = /*#__PURE__*/function (_Element8) {\n  function Title(config) {\n    var _this30;\n    _classCallCheck(this, Title);\n    _this30 = _callSuper(this, Title);\n    _this30.chart = config.chart;\n    _this30.options = config.options;\n    _this30.ctx = config.ctx;\n    _this30._padding = undefined;\n    _this30.top = undefined;\n    _this30.bottom = undefined;\n    _this30.left = undefined;\n    _this30.right = undefined;\n    _this30.width = undefined;\n    _this30.height = undefined;\n    _this30.position = undefined;\n    _this30.weight = undefined;\n    _this30.fullSize = undefined;\n    return _this30;\n  }\n  _inherits(Title, _Element8);\n  return _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var opts = this.options;\n      this.left = 0;\n      this.top = 0;\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n      var textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n        left = this.left,\n        bottom = this.bottom,\n        right = this.right,\n        options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctx;\n      var opts = this.options;\n      if (!opts.display) {\n        return;\n      }\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + this._padding.top;\n      var _this$_drawArgs = this._drawArgs(offset),\n        titleX = _this$_drawArgs.titleX,\n        titleY = _this$_drawArgs.titleY,\n        maxWidth = _this$_drawArgs.maxWidth,\n        rotation = _this$_drawArgs.rotation;\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n}(Element);\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map[\"delete\"](chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n    var i, len;\n    var xSet = new Set();\n    var y = 0;\n    var count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n    var xAverage = _toConsumableArray(xSet).reduce(function (a, b) {\n      return a + b;\n    }) / xSet.size;\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n    datasetIndex = item.datasetIndex,\n    index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n    label = _controller$getLabelA.label,\n    value = _controller$getLabelA.value;\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip.chart.ctx;\n  var body = tooltip.body,\n    footer = tooltip.footer,\n    title = tooltip.title;\n  var boxWidth = options.boxWidth,\n    boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  var widthPadding = 0;\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n    height = size.height;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n    width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n    width = size.width;\n  var chartWidth = chart.width,\n    _chart$chartArea = chart.chartArea,\n    left = _chart$chartArea.left,\n    right = _chart$chartArea.right;\n  var xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  var yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  var x = size.x,\n    width = size.width;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n    height = size.height;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n    caretPadding = options.caretPadding,\n    cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n    yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var _toTRBLCorners = toTRBLCorners(cornerRadius),\n    topLeft = _toTRBLCorners.topLeft,\n    topRight = _toTRBLCorners.topRight,\n    bottomLeft = _toTRBLCorners.bottomLeft,\n    bottomRight = _toTRBLCorners.bottomRight;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nvar defaultCallbacks = {\n  beforeTitle: noop,\n  title: function title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      var item = tooltipItems[0];\n      var labels = item.chart.data.labels;\n      var labelCount = labels ? labels.length : 0;\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n    return '';\n  },\n  afterTitle: noop,\n  beforeBody: noop,\n  beforeLabel: noop,\n  label: function label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n    var label = tooltipItem.dataset.label || '';\n    if (label) {\n      label += ': ';\n    }\n    var value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor: function labelColor(tooltipItem) {\n    var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    var options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0\n    };\n  },\n  labelTextColor: function labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle: function labelPointStyle(tooltipItem) {\n    var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    var options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation\n    };\n  },\n  afterLabel: noop,\n  afterBody: noop,\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  var result = callbacks[name].call(ctx, arg);\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n  return result;\n}\nvar Tooltip = /*#__PURE__*/function (_Element9) {\n  function Tooltip(config) {\n    var _this31;\n    _classCallCheck(this, Tooltip);\n    _this31 = _callSuper(this, Tooltip);\n    _this31.opacity = 0;\n    _this31._active = [];\n    _this31._eventPosition = undefined;\n    _this31._size = undefined;\n    _this31._cachedAnimations = undefined;\n    _this31._tooltipItems = [];\n    _this31.$animations = undefined;\n    _this31.$context = undefined;\n    _this31.chart = config.chart;\n    _this31.options = config.options;\n    _this31.dataPoints = undefined;\n    _this31.title = undefined;\n    _this31.beforeBody = undefined;\n    _this31.body = undefined;\n    _this31.afterBody = undefined;\n    _this31.footer = undefined;\n    _this31.xAlign = undefined;\n    _this31.yAlign = undefined;\n    _this31.x = undefined;\n    _this31.y = undefined;\n    _this31.height = undefined;\n    _this31.width = undefined;\n    _this31.caretX = undefined;\n    _this31.caretY = undefined;\n    _this31.labelColors = undefined;\n    _this31.labelPointStyles = undefined;\n    _this31.labelTextColors = undefined;\n    return _this31;\n  }\n  _inherits(Tooltip, _Element9);\n  return _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var cached = this._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      var chart = this.chart;\n      var options = this.options.setContext(this.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(this.chart, opts);\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var callbacks = options.callbacks;\n      var beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n      var title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n      var afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var _this32 = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', _this32, context)));\n        pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', _this32, context));\n        pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', _this32, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var callbacks = options.callbacks;\n      var beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n      var footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n      var afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var _this33 = this;\n      var active = this._active;\n      var data = this.chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', _this33, context));\n        labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', _this33, context));\n        labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', _this33, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var options = this.options.setContext(this.getContext());\n      var active = this._active;\n      var properties;\n      var tooltipItems = [];\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(this.chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var caretSize = options.caretSize,\n        cornerRadius = options.cornerRadius;\n      var _toTRBLCorners2 = toTRBLCorners(cornerRadius),\n        topLeft = _toTRBLCorners2.topLeft,\n        topRight = _toTRBLCorners2.topRight,\n        bottomLeft = _toTRBLCorners2.bottomLeft,\n        bottomRight = _toTRBLCorners2.bottomRight;\n      var ptX = tooltipPoint.x,\n        ptY = tooltipPoint.y;\n      var width = size.width,\n        height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var title = this.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var labelColor = this.labelColors[i];\n      var labelPointStyle = this.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(this, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColor.borderColor;\n        ctx.fillStyle = labelColor.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max.apply(Math, _toConsumableArray(Object.values(labelColor.borderWidth))) : labelColor.borderWidth || 1;\n        ctx.strokeStyle = labelColor.borderColor;\n        ctx.setLineDash(labelColor.borderDash || []);\n        ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n        var borderRadius = toTRBLCorners(labelColor.borderRadius);\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColor.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColor.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var body = this.body;\n      var bodySpacing = options.bodySpacing,\n        bodyAlign = options.bodyAlign,\n        displayColors = options.displayColors,\n        boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        each(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var footer = this.footer;\n      var length = footer.length;\n      var footerFont, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var x = pt.x,\n        y = pt.y;\n      var width = tooltipSize.width,\n        height = tooltipSize.height;\n      var _toTRBLCorners3 = toTRBLCorners(options.cornerRadius),\n        topLeft = _toTRBLCorners3.topLeft,\n        topRight = _toTRBLCorners3.topRight,\n        bottomLeft = _toTRBLCorners3.bottomLeft,\n        bottomRight = _toTRBLCorners3.bottomRight;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var chart = this.chart;\n      var anims = this.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n      if (animX || animY) {\n        var position = positioners[options.position].call(this, this._active, this._eventPosition);\n        if (!position) {\n          return;\n        }\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, this._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n  }, {\n    key: \"_willRender\",\n    value: function _willRender() {\n      return !!this.opacity;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options.setContext(this.getContext());\n      var opacity = this.opacity;\n      if (!opacity) {\n        return;\n      }\n      this._updateAnimationTarget(options);\n      var tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      var pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var _this34 = this;\n      var lastActive = this._active;\n      var active = activeElements.map(function (_ref11) {\n        var datasetIndex = _ref11.datasetIndex,\n          index = _ref11.index;\n        var meta = _this34.chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n      var positionChanged = this._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n      this._ignoreReplayEvents = false;\n      var options = this.options;\n      var lastActive = this._active || [];\n      var active = this._getActiveElements(e, lastActive, replay, inChartArea);\n      var positionChanged = this._positionChanged(active, e);\n      var changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n      if (changed) {\n        this._active = active;\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, replay, inChartArea) {\n      var _this35 = this;\n      var options = this.options;\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive.filter(function (i) {\n          return _this35.chart.data.datasets[i.datasetIndex] && _this35.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined;\n        });\n      }\n      var active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n      return active;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n        caretY = this.caretY,\n        options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n}(Element);\n_defineProperty(Tooltip, \"positioners\", positioners);\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      var args = {\n        tooltip: tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', _objectSpread(_objectSpread({}, args), {}, {\n        cancelable: true\n      })) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Colors: plugin_colors,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nvar addIfString = function addIfString(labels, raw, index, addedLabels) {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index: index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  var first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\nfunction _getLabelForValue(value) {\n  var labels = this.getLabels();\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  function CategoryScale(cfg) {\n    var _this36;\n    _classCallCheck(this, CategoryScale);\n    _this36 = _callSuper(this, CategoryScale, [cfg]);\n    _this36._startValue = undefined;\n    _this36._valueRange = 0;\n    _this36._addedLabels = [];\n    return _this36;\n  }\n  _inherits(CategoryScale, _Scale);\n  return _createClass(CategoryScale, [{\n    key: \"init\",\n    value: function init(scaleOptions) {\n      var added = this._addedLabels;\n      if (added.length) {\n        var labels = this.getLabels();\n        var _iterator25 = _createForOfIteratorHelper(added),\n          _step25;\n        try {\n          for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n            var _step25$value = _step25.value,\n              _index3 = _step25$value.index,\n              label = _step25$value.label;\n            if (labels[_index3] === label) {\n              labels.splice(_index3, 1);\n            }\n          }\n        } catch (err) {\n          _iterator25.e(err);\n        } finally {\n          _iterator25.f();\n        }\n        this._addedLabels = [];\n      }\n      _superPropGet(CategoryScale, \"init\", this, 3)([scaleOptions]);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getUserBounds2 = this.getUserBounds(),\n        minDefined = _this$getUserBounds2.minDefined,\n        maxDefined = _this$getUserBounds2.maxDefined;\n      var _this$getMinMax = this.getMinMax(true),\n        min = _this$getMinMax.min,\n        max = _this$getMinMax.max;\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var min = this.min;\n      var max = this.max;\n      var offset = this.options.offset;\n      var ticks = [];\n      var labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return _getLabelForValue.call(this, value);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      _superPropGet(CategoryScale, \"configure\", this, 3)([]);\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n}(Scale);\n_defineProperty(CategoryScale, \"id\", 'category');\n_defineProperty(CategoryScale, \"defaults\", {\n  ticks: {\n    callback: _getLabelForValue\n  }\n});\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n    step = generationOptions.step,\n    min = generationOptions.min,\n    max = generationOptions.max,\n    precision = generationOptions.precision,\n    count = generationOptions.count,\n    maxTicks = generationOptions.maxTicks,\n    maxDigits = generationOptions.maxDigits,\n    includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n    rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    var tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({\n      value: tickValue\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref12) {\n  var horizontal = _ref12.horizontal,\n    minRotation = _ref12.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  function LinearScaleBase(cfg) {\n    var _this37;\n    _classCallCheck(this, LinearScaleBase);\n    _this37 = _callSuper(this, LinearScaleBase, [cfg]);\n    _this37.start = undefined;\n    _this37.end = undefined;\n    _this37._startValue = undefined;\n    _this37._endValue = undefined;\n    _this37._valueRange = 0;\n    return _this37;\n  }\n  _inherits(LinearScaleBase, _Scale2);\n  return _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var beginAtZero = this.options.beginAtZero;\n      var _this$getUserBounds3 = this.getUserBounds(),\n        minDefined = _this$getUserBounds3.minDefined,\n        maxDefined = _this$getUserBounds3.maxDefined;\n      var min = this.min,\n        max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        var offset = max === 0 ? 1 : Math.abs(max * 0.05);\n        setMax(max + offset);\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n        stepSize = tickOpts.stepSize;\n      var maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = this._range || this;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var ticks = this.ticks;\n      var start = this.min;\n      var end = this.max;\n      _superPropGet(LinearScaleBase, \"configure\", this, 3)([]);\n      if (this.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }]);\n}(Scale);\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n    return _callSuper(this, LinearScale, arguments);\n  }\n  _inherits(LinearScale, _LinearScaleBase);\n  return _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax2 = this.getMinMax(true),\n        min = _this$getMinMax2.min,\n        max = _this$getMinMax2.max;\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var horizontal = this.isHorizontal();\n      var length = horizontal ? this.width : this.height;\n      var minRotation = toRadians(this.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      var tickFont = this._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n}(LinearScaleBase);\n_defineProperty(LinearScale, \"id\", 'linear');\n_defineProperty(LinearScale, \"defaults\", {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n});\nvar log10Floor = function log10Floor(v) {\n  return Math.floor(log10(v));\n};\nvar changeExponent = function changeExponent(v, m) {\n  return Math.pow(10, log10Floor(v) + m);\n};\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, log10Floor(tickVal));\n  return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n  var rangeStep = Math.pow(10, rangeExp);\n  var start = Math.floor(min / rangeStep);\n  var end = Math.ceil(max / rangeStep);\n  return end - start;\n}\nfunction startExp(min, max) {\n  var range = max - min;\n  var rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\nfunction generateTicks(generationOptions, _ref13) {\n  var min = _ref13.min,\n    max = _ref13.max;\n  min = finiteOrDefault(generationOptions.min, min);\n  var ticks = [];\n  var minExp = log10Floor(min);\n  var exp = startExp(min, max);\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  var stepSize = Math.pow(10, exp);\n  var base = minExp > exp ? Math.pow(10, minExp) : 0;\n  var start = Math.round((min - base) * precision) / precision;\n  var offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  var significand = Math.floor((start - offset) / Math.pow(10, exp));\n  var value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({\n      value: value,\n      major: isMajor(value),\n      significand: significand\n    });\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  var lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(lastTick),\n    significand: significand\n  });\n  return ticks;\n}\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  function LogarithmicScale(cfg) {\n    var _this38;\n    _classCallCheck(this, LogarithmicScale);\n    _this38 = _callSuper(this, LogarithmicScale, [cfg]);\n    _this38.start = undefined;\n    _this38.end = undefined;\n    _this38._startValue = undefined;\n    _this38._valueRange = 0;\n    return _this38;\n  }\n  _inherits(LogarithmicScale, _Scale3);\n  return _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax3 = this.getMinMax(true),\n        min = _this$getMinMax3.min,\n        max = _this$getMinMax3.max;\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n      if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n        this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n      }\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var _this$getUserBounds4 = this.getUserBounds(),\n        minDefined = _this$getUserBounds4.minDefined,\n        maxDefined = _this$getUserBounds4.maxDefined;\n      var min = this.min;\n      var max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(changeExponent(min, -1));\n          setMax(changeExponent(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(changeExponent(max, -1));\n      }\n      if (max <= 0) {\n        setMax(changeExponent(min, +1));\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      var ticks = generateTicks(generationOptions, this);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var start = this.min;\n      _superPropGet(LogarithmicScale, \"configure\", this, 3)([]);\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }]);\n}(Scale);\n_defineProperty(LogarithmicScale, \"id\", 'logarithmic');\n_defineProperty(LogarithmicScale, \"defaults\", {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n});\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  var orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  var limits = Object.assign({}, orig);\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale._pointLabels.length;\n  var pointLabelOpts = scale.options.pointLabels;\n  var additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    var angle = Math.round(toDegrees(angleRadians));\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  var sin = Math.abs(Math.sin(angle));\n  var cos = Math.abs(Math.cos(angle));\n  var x = 0;\n  var y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n  var outerDistance = scale.drawingArea;\n  var extra = itemOpts.extra,\n    additionalAngle = itemOpts.additionalAngle,\n    padding = itemOpts.padding,\n    size = itemOpts.size;\n  var pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  var angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  var y = yForAngle(pointLabelPosition.y, size.h, angle);\n  var textAlign = getTextAlignForAngle(angle);\n  var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    visible: true,\n    x: pointLabelPosition.x,\n    y: y,\n    textAlign: textAlign,\n    left: left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  var left = item.left,\n    top = item.top,\n    right = item.right,\n    bottom = item.bottom;\n  var apexesInArea = _isPointInArea({\n    x: left,\n    y: top\n  }, area) || _isPointInArea({\n    x: left,\n    y: bottom\n  }, area) || _isPointInArea({\n    x: right,\n    y: top\n  }, area) || _isPointInArea({\n    x: right,\n    y: bottom\n  }, area);\n  return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale._pointLabels.length;\n  var opts = scale.options;\n  var _opts$pointLabels = opts.pointLabels,\n    centerPointLabels = _opts$pointLabels.centerPointLabels,\n    display = _opts$pointLabels.display;\n  var itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  var area;\n  for (var i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n    var item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n  var left = item.left,\n    top = item.top,\n    right = item.right,\n    bottom = item.bottom;\n  var backdropColor = opts.backdropColor;\n  if (!isNullOrUndef(backdropColor)) {\n    var borderRadius = toTRBLCorners(opts.borderRadius);\n    var padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n    var backdropLeft = left - padding.left;\n    var backdropTop = top - padding.top;\n    var backdropWidth = right - left + padding.width;\n    var backdropHeight = bottom - top + padding.height;\n    if (Object.values(borderRadius).some(function (v) {\n      return v !== 0;\n    })) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n    pointLabels = scale.options.pointLabels;\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      continue;\n    }\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    var plFont = toFont(optsAtIndex.font);\n    var x = item.x,\n      y = item.y,\n      textAlign = item.textAlign;\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n    lineWidth = gridLineOpts.lineWidth;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  function RadialLinearScale(cfg) {\n    var _this39;\n    _classCallCheck(this, RadialLinearScale);\n    _this39 = _callSuper(this, RadialLinearScale, [cfg]);\n    _this39.xCenter = undefined;\n    _this39.yCenter = undefined;\n    _this39.drawingArea = undefined;\n    _this39._pointLabels = [];\n    _this39._pointLabelItems = [];\n    return _this39;\n  }\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n  return _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      var w = this.width = this.maxWidth - padding.width;\n      var h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax4 = this.getMinMax(false),\n        min = _this$getMinMax4.min,\n        max = _this$getMinMax4.max;\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var _this40 = this;\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map(function (value, index) {\n        var label = callback(_this40.options.pointLabels.callback, [value, index], _this40);\n        return label || label === 0 ? label : '';\n      }).filter(function (v, i) {\n        return _this40.chart.getDataVisibility(i);\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var opts = this.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / (this._pointLabels.length || 1);\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n      return (value - this.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n      var scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var pointLabels = this._pointLabels || [];\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n        left = _this$_pointLabelItem.left,\n        top = _this$_pointLabelItem.top,\n        right = _this$_pointLabelItem.right,\n        bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var _this$options16 = this.options,\n        backgroundColor = _this$options16.backgroundColor,\n        circular = _this$options16.grid.circular;\n      if (backgroundColor) {\n        var ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var _this41 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var angleLines = opts.angleLines,\n        grid = opts.grid,\n        border = opts.border;\n      var labelCount = this._pointLabels.length;\n      var i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n      if (grid.display) {\n        this.ticks.forEach(function (tick, index) {\n          if (index !== 0 || index === 0 && _this41.min < 0) {\n            offset = _this41.getDistanceFromCenterForValue(tick.value);\n            var context = _this41.getContext(index);\n            var optsAtIndex = grid.setContext(context);\n            var optsAtIndexBorder = border.setContext(context);\n            drawRadiusLine(_this41, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = labelCount - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n            lineWidth = optsAtIndex.lineWidth;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var _this42 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      var startAngle = this.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach(function (tick, index) {\n        if (index === 0 && _this42.min >= 0 && !opts.reverse) {\n          return;\n        }\n        var optsAtIndex = tickOpts.setContext(_this42.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = _this42.getDistanceFromCenterForValue(_this42.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color,\n          strokeColor: optsAtIndex.textStrokeColor,\n          strokeWidth: optsAtIndex.textStrokeWidth\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n}(LinearScaleBase);\n_defineProperty(RadialLinearScale, \"id\", 'radialLinear');\n_defineProperty(RadialLinearScale, \"defaults\", {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n});\n_defineProperty(RadialLinearScale, \"defaultRoutes\", {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n});\n_defineProperty(RadialLinearScale, \"descriptors\", {\n  angleLines: {\n    _fallback: 'grid'\n  }\n});\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = /* #__PURE__ */Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n    parser = _scale$_parseOpts.parser,\n    round = _scale$_parseOpts.round,\n    isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n      lo = _lookup2.lo,\n      hi = _lookup2.hi;\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  function TimeScale(props) {\n    var _this43;\n    _classCallCheck(this, TimeScale);\n    _this43 = _callSuper(this, TimeScale, [props]);\n    _this43._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this43._unit = 'day';\n    _this43._majorUnit = undefined;\n    _this43._offsets = {};\n    _this43._normalized = false;\n    _this43._parseOpts = undefined;\n    return _this43;\n  }\n  _inherits(TimeScale, _Scale4);\n  return _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      adapter.init(opts);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      _superPropGet(TimeScale, \"init\", this, 3)([scaleOpts]);\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _superPropGet(TimeScale, \"beforeLayout\", this, 3)([]);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var options = this.options;\n      var adapter = this._adapter;\n      var unit = options.time.unit || 'day';\n      var _this$getUserBounds5 = this.getUserBounds(),\n        min = _this$getUserBounds5.min,\n        max = _this$getUserBounds5.max,\n        minDefined = _this$getUserBounds5.minDefined,\n        maxDefined = _this$getUserBounds5.maxDefined;\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var options = this.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n      var min = this.min;\n      var max = this.max;\n      var ticks = _filterBetween(timestamps, min, max);\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(function (tick) {\n          return +tick.value;\n        }));\n      }\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var start = 0;\n      var end = 0;\n      var first, last;\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var adapter = this._adapter;\n      var min = this.min;\n      var max = this.max;\n      var options = this.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      var stepSize = valueOrDefault(options.ticks.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      var timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort(sorter).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var adapter = this._adapter;\n      var timeOpts = this.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"format\",\n    value: function format(value, _format) {\n      var options = this.options;\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var fmt = _format || formats[unit];\n      return this._adapter.format(value, fmt);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var options = this.options;\n      var formatter = options.ticks.callback;\n      if (formatter) {\n        return callback(formatter, [time, index, ticks], this);\n      }\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var majorUnit = this._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var ticksOpts = this.options.ticks;\n      var tickLabelWidth = this.ctx.measureText(label).width;\n      var angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = this._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var timeOpts = this.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      var exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n      var size = this._getLabelSize(exampleLabel);\n      var capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var timestamps = this._cache.data || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var metas = this.getMatchingVisibleMetas();\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n      return this._cache.data = this.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var timestamps = this._cache.labels || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var labels = this.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(this, labels[i]));\n      }\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n}(Scale);\n_defineProperty(TimeScale, \"id\", 'time');\n_defineProperty(TimeScale, \"defaults\", {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    callback: false,\n    major: {\n      enabled: false\n    }\n  }\n});\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale2) {\n  function TimeSeriesScale(props) {\n    var _this44;\n    _classCallCheck(this, TimeSeriesScale);\n    _this44 = _callSuper(this, TimeSeriesScale, [props]);\n    _this44._table = [];\n    _this44._minPos = undefined;\n    _this44._tableRange = undefined;\n    return _this44;\n  }\n  _inherits(TimeSeriesScale, _TimeScale2);\n  return _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = this._getTimestampsForTable();\n      var table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      _superPropGet(TimeSeriesScale, \"initOffsets\", this, 3)([timestamps]);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n        max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n      return table;\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var min = this.min;\n      var max = this.max;\n      var timestamps = _superPropGet(TimeSeriesScale, \"getDataTimestamps\", this, 3)([]);\n      if (!timestamps.includes(min) || !timestamps.length) {\n        timestamps.splice(0, 0, min);\n      }\n      if (!timestamps.includes(max) || timestamps.length === 1) {\n        timestamps.push(max);\n      }\n      return timestamps.sort(function (a, b) {\n        return a - b;\n      });\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var timestamps = this._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var data = this.getDataTimestamps();\n      var label = this.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }]);\n}(TimeScale);\n_defineProperty(TimeSeriesScale, \"id\", 'timeseries');\n_defineProperty(TimeSeriesScale, \"defaults\", TimeScale.defaults);\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["Animator","_classCallCheck","_request","_charts","Map","_running","_lastDate","undefined","_createClass","key","value","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","_this","requestAnimFrame","call","window","_update","_this2","arguments","length","Date","now","remaining","running","items","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","_this$_getAnims$items","apply","_toConsumableArray","has","reduce","acc","cur","max","_duration","stop","cancel","remove","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_typeof","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","_i","_animationOptions","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isNumberFinite","sign","convertObjectDataToArray","data","meta","iScale","vScale","iAxisKey","axis","vAxisKey","adata","Array","_defineProperty","isStacked","stacked","getStackKey","indexScale","valueScale","concat","id","getUserBounds","_scale$getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","_iterator","_createForOfIteratorHelper","getMatchingVisibleMetas","_step","s","n","done","err","e","f","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","_iterator2","_step2","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","constructor","dataElementType","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","_this$_parsing","_this$_parsing$xAxisK","xAxisKey","_this$_parsing$yAxisK","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","_getUserBounds","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","_this3","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","_iterator3","_step3","_step3$value","_slicedToArray","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_args2","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","_borderProps","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","_ref","inflateAmount","BarController","_DatasetController2","_callSuper","_inherits","_this$_parsing2","_this$_parsing2$xAxis","_this$_parsing2$yAxis","obj","_superPropGet","bars","getBasePixel","_getRuler","_this$_getSharedOptio","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","currentParsed","iScaleValue","skipNull","find","val","isNaN","_iterator4","_step4","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","_this$_cachedMeta","_this$options","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","numbers","_index_","offset","grid","_value_","beginAtZero","BubbleController","_DatasetController3","radius","points","_this$_cachedMeta2","_this$_getSharedOptio2","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","_DatasetController4","_this4","innerRadius","outerRadius","getter","_this$_parsing$key","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","_this$_getRotationExt","_getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_this$_getSharedOptio3","arc","metaData","formatNumber","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","_chart$legend$options2","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","onClick","legendItem","toggleDataVisibility","LineController","_DatasetController5","line","_meta$data","_dataset","animationsDisabled","_getStartAndCountOfVi","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","_this$_cachedMeta3","_this$_getSharedOptio4","_this$options2","spanGaps","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_DatasetController6","_this5","_parseObjectDataRadialScale","bind","_updateRadius","_this6","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_this7","_chart$legend$options3","angleLines","display","circular","pointLabels","PieController","_DoughnutController2","RadarController","_DatasetController7","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","_DatasetController8","_meta$data2","_getStartAndCountOfVi2","registry","getElement","_this$_cachedMeta4","_this$options3","interaction","abstract","Error","DateAdapterBase","init","formats","format","diff","startOf","endOf","override","members","prototype","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","_metasets$i","_binarySearch","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","_element$getProps","getProps","_getAngleFromPoint","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","_box","_box$options","_box$options$stackWei","buildStacks","layouts","_iterator5","_step5","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","_updateDims","setBoxDims","placeBoxes","userPadding","padding","_iterator6","_step6","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","_BasePlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","_getRelativePosition","nodeListContains","nodeList","_iterator7","_step7","contains","createAttachObserver","observer","MutationObserver","entries","trigger","_iterator8","_step8","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","_iterator9","_step9","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","_BasePlatform2","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","_this$getProps","hasValue","final","_this8","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_Element2","_this9","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","_this$getUserBounds","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","callback","margins","_this$options4","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","_this$options5","titleOpts","gridOpts","titleHeight","_this$_getLabelSizes","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","_this$options6","_this$options6$ticks","isRotated","labelsBelowTicks","offsetLeft","offsetRight","_this$options7","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_this$options8","_this$options9","_this$options9$ticks","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","_this$options10","lastLineWidth","drawLabels","clipArea","_iterator10","_step10","renderTextOptions","renderText","unclipArea","drawTitle","_this$options11","_titleArgs","_this10","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","overrides","unregister","itemDefaults","merge","defaultRoutes","routeDefaults","descriptors","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","_this11","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","_iterator11","_step11","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","_ref2","_iterator12","_step12","pluginOpts","_ref3","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","_len11","scaleOptions","_key11","_i3","_scaleOptions","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","d","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","_getResolver","getResolver","resolver","subPrefixes","needContext","isFunction","subResolver","_attachContext","_iterator13","_step13","descriptorDefaults","_getResolver2","resolverCache","_createResolver","p","hasFunction","_descriptors2","isScriptable","isIndexable","_iterator14","_step14","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","_i4","_keys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","userConfig","_this12","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","_this$options12","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","_this13","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","_this14","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_defaults$datasets$ty","_resetElements","_this15","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_this$getDatasetMeta","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","_this16","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","_iterator15","_step15","_step15$value","datasetCount","makeSet","changeSet","_this17","noArea","_this17$_layers","_idx","_updateDataset","_this$_resizeBeforeDr","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","_this$canvas","toDataURL","bindUserEvents","bindResponsiveEvents","_this18","_add","_this19","_remove","detached","_this20","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","_this21","lastActive","_ref4","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","_this22","eventFilter","_handleEvent","_this$_active","_getActiveElements","_isClickEvent","onHover","invalidatePlugins","version","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","_parseBorderRadius$","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","_Element3","_this23","chartX","chartY","_getAngleFromPoint2","_this$getProps2","rAdjust","nonZeroBetween","betweenAngles","withinRadius","_isBetween","_this$getProps3","_this$options13","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","_params$start","paramsStart","_params$end","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","_pathVars","lineMethod","_ref5","_ref5$move","fastPathSegment","_pathVars2","_ref6","_ref6$move","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","_iterator16","_step16","usePath2D","LineElement","_Element4","_this24","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","_segments$i","interpolated","_iterator17","_step17","capBezierPoints","inRange$1","_el$getProps","hitRadius","PointElement","_Element5","_this25","mouseX","mouseY","_this$getProps4","inXRange","inYRange","_this$getProps5","hoverRadius","drawPoint","getBarBounds","bar","_bar$getProps","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","parseBorderRadius","_bar$getProps2","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","_Element6","_this26","_this$options14","_boundingRects","addRectPath","addRoundedRectPath","_this$getProps6","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","containsDefaultColorsDefenitions","plugin_colors","forceOverride","_args","_chart$config","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","_data$a","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","_objectSpread","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","_iScale$getUserBounds","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","_getStartAndCountOfVi3","threshold","tpoints","_iterator18","_step18","_findSegmentEnd","_getBounds","targetSegments","_iterator19","_step19","tgt","subBounds","fillSources","_boundSegment","_iterator20","_step20","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","_ref7","_ref7$x","_ref7$y","linePoints","_ref8","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","_findPoint","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_source$scale","_drawfill","lineOpts","_ref9","_ref9$above","above","_ref9$below","doFill","clipVertical","clipY","lineLoop","_iterator21","_step21","_iterator22","_step22","_step22$value","src","_src$style","_src$style2","_src$style2$backgroun","notShape","clipBounds","interpolatedLineTo","targetLoop","_scale$chart$chartAre","_ref10","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","_labelOpts$boxHeight","boxHeight","_labelOpts$boxWidth","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_Element7","_this27","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","_this28","labelFont","_computeTitleHeight","_getBoxSize","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","_calculateItemSize","calculateItemSize","adjustHitBoxes","_this$options15","rtl","rtlHelper","getRtlAdapter","_iterator23","_step23","hitbox","leftForLtr","_iterator24","_step24","_draw","_this29","defaultColor","halfFontSize","cursor","_getBoxSize2","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","_chart$legend$options","useBorderRadius","Title","_Element8","_this30","_padding","textSize","_drawArgs","fontOpts","_this$_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","xSet","xAverage","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","str","String","createTooltipItem","_controller$getLabelA","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","_chart$chartArea","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","_toTRBLCorners","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","_Element9","_this31","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","_this32","bodyItems","scoped","getAfterBody","getFooter","_createItems","_this33","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","_toTRBLCorners2","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","_toTRBLCorners3","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_this34","_ref11","positionChanged","_positionChanged","_ignoreReplayEvents","_this35","plugin_tooltip","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_Scale","_this36","_startValue","_valueRange","_addedLabels","added","_iterator25","_step25","_step25$value","isFinite","_this$getUserBounds2","_this$getMinMax","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","tickValue","_ref12","rad","LinearScaleBase","_Scale2","_this37","_endValue","handleTickRangeOptions","_this$getUserBounds3","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","_LinearScaleBase","_this$getMinMax2","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","_ref13","minExp","exp","significand","lastTick","LogarithmicScale","_Scale3","_this38","_zero","_this$getMinMax3","_this$getUserBounds4","logarithmic","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","_opts$pointLabels","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","_LinearScaleBase2","_this39","_this$getMinMax4","_this40","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","_this$_pointLabelItem","_this$options16","_this41","_this42","rotate","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_scale$_parseOpts","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup2","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_Scale4","_this43","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_this$getUserBounds5","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","_lookupByKey2","_table$lo","_table$hi","_lookupByKey3","_table$lo2","_table$hi2","span","TimeSeriesScale","_TimeScale2","_this44","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sources":["../src/core/core.animator.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/controllers/controller.bar.js","../src/controllers/controller.bubble.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.line.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/core/core.adapters.ts","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}