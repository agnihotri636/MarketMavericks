{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport Highcharts from 'highcharts';\nimport HighchartsVue from 'highcharts-vue';\nimport axios from 'axios';\nimport HighchartsStock from 'highcharts/modules/stock';\nHighchartsStock(Highcharts);\nexport default {\n  name: 'Home',\n  components: {\n    highcharts: HighchartsVue.component\n  },\n  data: function data() {\n    return {\n      chartOptions: {\n        chart: {\n          type: 'candlestick' // Set chart type to candlestick\n        },\n        title: {\n          text: 'Stock Price Candlestick Chart'\n        },\n        xAxis: {\n          type: 'datetime' // Use datetime for the x-axis\n        },\n        yAxis: {\n          title: {\n            text: 'Price'\n          }\n        },\n        series: [{\n          name: 'Candlestick',\n          data: [],\n          // Initialize with an empty array\n          tooltip: {\n            valueDecimals: 2\n          }\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    // Fetch chart data from the Flask API\n    axios.get('http://127.0.0.1:5000/api/chart-data/AAPL') // Change 'AAPL' to any stock symbol you want\n    .then(function (response) {\n      var chartData = response.data.map(function (item) {\n        return [new Date(item.date).getTime(),\n        // Convert date to timestamp\n        item.open, item.high, item.low, item.close];\n      });\n      _this.chartOptions.series[0].data = chartData; // Update the chart data\n    })[\"catch\"](function (error) {\n      console.error('Error fetching chart data:', error);\n    });\n  }\n};","map":{"version":3,"names":["Highcharts","HighchartsVue","axios","HighchartsStock","name","components","highcharts","component","data","chartOptions","chart","type","title","text","xAxis","yAxis","series","tooltip","valueDecimals","mounted","_this","get","then","response","chartData","map","item","Date","date","getTime","open","high","low","close","error","console"],"sources":["/home/shivam/Desktop/tradetrek/frontend/src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <h1>Welcome to TradeTrek</h1>\n    <p>Your personal trading journal and analysis tool</p>\n    <div class=\"chart-container\">\n      <highcharts :options=\"chartOptions\"></highcharts>\n    </div>\n    <div class=\"features\">\n      <h2>Features:</h2>\n      <ul>\n        <li>Track your trades</li>\n        <li>Analyze your performance</li>\n        <li>Set and monitor trading goals</li>\n        <li>Secure and private</li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Highcharts from 'highcharts';\nimport HighchartsVue from 'highcharts-vue';\nimport axios from 'axios';\nimport HighchartsStock from 'highcharts/modules/stock';\n\nHighchartsStock(Highcharts);\n\nexport default {\n  name: 'Home',\n  components: {\n    highcharts: HighchartsVue.component\n  },\n  data() {\n    return {\n      chartOptions: {\n        chart: {\n          type: 'candlestick', // Set chart type to candlestick\n        },\n        title: {\n          text: 'Stock Price Candlestick Chart'\n        },\n        xAxis: {\n          type: 'datetime', // Use datetime for the x-axis\n        },\n        yAxis: {\n          title: {\n            text: 'Price'\n          }\n        },\n        series: [\n          {\n            name: 'Candlestick',\n            data: [], // Initialize with an empty array\n            tooltip: {\n              valueDecimals: 2\n            }\n          }\n        ]\n      }\n    };\n  },\n  mounted() {\n    // Fetch chart data from the Flask API\n    axios.get('http://127.0.0.1:5000/api/chart-data/AAPL') // Change 'AAPL' to any stock symbol you want\n      .then(response => {\n        const chartData = response.data.map(item => [\n          new Date(item.date).getTime(), // Convert date to timestamp\n          item.open,\n          item.high,\n          item.low,\n          item.close\n        ]);\n        this.chartOptions.series[0].data = chartData; // Update the chart data\n      })\n      .catch(error => {\n        console.error('Error fetching chart data:', error);\n      });\n  }\n};\n</script>\n\n<style scoped>\n.chart-container {\n  height: 400px; /* Adjust height as needed */\n}\n</style>\n"],"mappings":";;;;AAoBA,OAAOA,UAAS,MAAO,YAAY;AACnC,OAAOC,aAAY,MAAO,gBAAgB;AAC1C,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,eAAc,MAAO,0BAA0B;AAEtDA,eAAe,CAACH,UAAU,CAAC;AAE3B,eAAe;EACbI,IAAI,EAAE,MAAM;EACZC,UAAU,EAAE;IACVC,UAAU,EAAEL,aAAa,CAACM;EAC5B,CAAC;EACDC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;QACZC,KAAK,EAAE;UACLC,IAAI,EAAE,aAAa,CAAE;QACvB,CAAC;QACDC,KAAK,EAAE;UACLC,IAAI,EAAE;QACR,CAAC;QACDC,KAAK,EAAE;UACLH,IAAI,EAAE,UAAU,CAAE;QACpB,CAAC;QACDI,KAAK,EAAE;UACLH,KAAK,EAAE;YACLC,IAAI,EAAE;UACR;QACF,CAAC;QACDG,MAAM,EAAE,CACN;UACEZ,IAAI,EAAE,aAAa;UACnBI,IAAI,EAAE,EAAE;UAAE;UACVS,OAAO,EAAE;YACPC,aAAa,EAAE;UACjB;QACF;MAEJ;IACF,CAAC;EACH,CAAC;EACDC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IAAA,IAAAC,KAAA;IACR;IACAlB,KAAK,CAACmB,GAAG,CAAC,2CAA2C,EAAE;IAAA,CACpDC,IAAI,CAAC,UAAAC,QAAO,EAAK;MAChB,IAAMC,SAAQ,GAAID,QAAQ,CAACf,IAAI,CAACiB,GAAG,CAAC,UAAAC,IAAG;QAAA,OAAK,CAC1C,IAAIC,IAAI,CAACD,IAAI,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC;QAAE;QAC/BH,IAAI,CAACI,IAAI,EACTJ,IAAI,CAACK,IAAI,EACTL,IAAI,CAACM,GAAG,EACRN,IAAI,CAACO,KAAI,CACV;MAAA,EAAC;MACFb,KAAI,CAACX,YAAY,CAACO,MAAM,CAAC,CAAC,CAAC,CAACR,IAAG,GAAIgB,SAAS,EAAE;IAChD,CAAC,UACK,CAAC,UAAAU,KAAI,EAAK;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACN;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}