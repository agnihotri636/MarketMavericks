{"ast":null,"code":"import _regeneratorRuntime from \"/home/shivam/Desktop/tradetrek/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shivam/Desktop/tradetrek/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { fetchTradeData } from '@/services/TradeService.js';\nexport default {\n  name: 'Home',\n  data: function data() {\n    return {\n      selectedCompany: '',\n      companies: [],\n      // Populate this with your list of companies\n      tradeData: null\n    };\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetchTradeData(_this.selectedCompany);\n            case 3:\n              data = _context.sent;\n              _this.tradeData = data; // Save the fetched data\n              // You can process and display the data as needed\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching trade data:', _context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n    fetchCompanies: function fetchCompanies() {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    } // You may implement a method to fetch the companies if needed\n    // Example: this.companies = await fetchCompanies();\n  },\n  mounted: function mounted() {\n    this.fetchCompanies(); // Optionally fetch companies on component mount\n  }\n};","map":{"version":3,"names":["fetchTradeData","name","data","selectedCompany","companies","tradeData","methods","fetchData","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","sent","t0","console","error","stop","fetchCompanies","_callee2","_callee2$","_context2","mounted"],"sources":["/home/shivam/Desktop/tradetrek/frontend/src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <h1>Welcome to TradeTrek</h1>\n    <p>Your personal trading journal and analysis tool</p>\n    \n    <h2>Track Your Trades</h2>\n    <select v-model=\"selectedCompany\">\n      <option v-for=\"company in companies\" :key=\"company.id\" :value=\"company.name\">\n        {{ company.name }}\n      </option>\n    </select>\n    <button @click=\"fetchData\">Fetch Trade Data</button>\n    \n    <div v-if=\"tradeData\">\n      <h3>Trade Data for {{ selectedCompany }}</h3>\n      <pre>{{ tradeData }}</pre>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { fetchTradeData } from '@/services/TradeService.js';\n\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      selectedCompany: '',\n      companies: [], // Populate this with your list of companies\n      tradeData: null\n    };\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const data = await fetchTradeData(this.selectedCompany);\n        this.tradeData = data; // Save the fetched data\n        // You can process and display the data as needed\n      } catch (error) {\n        console.error('Error fetching trade data:', error);\n      }\n    },\n    async fetchCompanies() {\n      // You may implement a method to fetch the companies if needed\n      // Example: this.companies = await fetchCompanies();\n    }\n  },\n  mounted() {\n    this.fetchCompanies(); // Optionally fetch companies on component mount\n  }\n};\n</script>\n\n<style scoped>\n.home {\n  text-align: center;\n  padding: 20px;\n}\n</style>\n"],"mappings":";;AAqBA,SAASA,cAAa,QAAS,4BAA4B;AAE3D,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,EAAE;MACnBC,SAAS,EAAE,EAAE;MAAE;MACfC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACDC,SAAS,WAATA,SAASA,CAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAV,IAAA;QAAA,OAAAQ,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEKjB,cAAc,CAACQ,KAAI,CAACL,eAAe,CAAC;YAAA;cAAjDD,IAAG,GAAAa,QAAA,CAAAG,IAAA;cACTV,KAAI,CAACH,SAAQ,GAAIH,IAAI,EAAE;cACvB;cAAAa,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAI,EAAA,GAAAJ,QAAA;cAEAK,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAAN,QAAA,CAAAI,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAJ,QAAA,CAAAO,IAAA;UAAA;QAAA,GAAAV,OAAA;MAAA;IAEtD,CAAC;IACKW,cAAc,WAAdA,cAAcA,CAAA,EAAG;MAAA,OAAAd,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAa,SAAA;QAAA,OAAAd,mBAAA,GAAAG,IAAA,UAAAY,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAV,IAAA,GAAAU,SAAA,CAAAT,IAAA;YAAA;YAAA;cAAA,OAAAS,SAAA,CAAAJ,IAAA;UAAA;QAAA,GAAAE,QAAA;MAAA;IAGvB,EAFE;IACA;EAEJ,CAAC;EACDG,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACR,IAAI,CAACJ,cAAc,CAAC,CAAC,EAAE;EACzB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}