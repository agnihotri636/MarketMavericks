{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nexport default {\n  name: 'Dashboard',\n  data: function data() {\n    return {\n      selectedCompany: '',\n      quantity: 0,\n      buyPrice: 0,\n      sellPrice: 0,\n      companies: [{\n        id: 1,\n        name: 'Company A'\n      }, {\n        id: 2,\n        name: 'Company B'\n      }, {\n        id: 3,\n        name: 'Company C'\n      }],\n      trades: []\n    };\n  },\n  computed: {\n    totalTrades: function totalTrades() {\n      return this.trades.length;\n    },\n    profitLoss: function profitLoss() {\n      var _this = this;\n      return this.trades.reduce(function (total, trade) {\n        return total + _this.calculateProfitLoss(trade);\n      }, 0);\n    }\n  },\n  methods: {\n    addTrade: function addTrade() {\n      var newTrade = {\n        id: this.trades.length + 1,\n        company: this.selectedCompany,\n        quantity: this.quantity,\n        buyPrice: parseFloat(this.buyPrice),\n        sellPrice: parseFloat(this.sellPrice)\n      };\n      this.trades.push(newTrade);\n      // Reset fields after adding trade\n      this.selectedCompany = '';\n      this.quantity = 0;\n      this.buyPrice = 0;\n      this.sellPrice = 0;\n    },\n    calculateProfitLoss: function calculateProfitLoss(trade) {\n      return (trade.sellPrice - trade.buyPrice) * trade.quantity;\n    }\n  },\n  mounted: function mounted() {\n    // Here you can initialize your TradingView chart\n    var widget = new window.TradingView.widget({\n      container_id: \"trading-chart\",\n      width: \"100%\",\n      height: 400,\n      symbol: \"AAPL\",\n      interval: \"D\",\n      timezone: \"Etc/UTC\",\n      theme: \"light\",\n      style: \"1\",\n      toolbar_bg: \"#f1f3f6\",\n      enable_publishing: false,\n      allow_symbol_change: true,\n      details: true,\n      hotlist: true,\n      calendar: true,\n      news: [\"headlines\", \"stock\", \"crypto\", \"forex\"]\n    });\n  }\n};","map":{"version":3,"names":["name","data","selectedCompany","quantity","buyPrice","sellPrice","companies","id","trades","computed","totalTrades","length","profitLoss","_this","reduce","total","trade","calculateProfitLoss","methods","addTrade","newTrade","company","parseFloat","push","mounted","widget","window","TradingView","container_id","width","height","symbol","interval","timezone","theme","style","toolbar_bg","enable_publishing","allow_symbol_change","details","hotlist","calendar","news"],"sources":["/home/shivam/Desktop/tradetrek/frontend/src/views/Dashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <h1>Your Trading Dashboard</h1>\n    \n    <div class=\"summary\">\n      <h2>Trade Summary</h2>\n      <p>Total Trades: {{ totalTrades }}</p>\n      <p>Profit/Loss: {{ profitLoss }}</p>\n    </div>\n\n    <div class=\"trade-entry\">\n      <h2>Add a New Trade</h2>\n      <form @submit.prevent=\"addTrade\">\n        <div>\n          <label for=\"company\">Company:</label>\n          <select v-model=\"selectedCompany\" required>\n            <option v-for=\"company in companies\" :key=\"company.id\" :value=\"company.name\">\n              {{ company.name }}\n            </option>\n          </select>\n        </div>\n        <div>\n          <label for=\"quantity\">Quantity:</label>\n          <input type=\"number\" v-model=\"quantity\" required min=\"1\" />\n        </div>\n        <div>\n          <label for=\"buyPrice\">Buy Price:</label>\n          <input type=\"number\" v-model=\"buyPrice\" required step=\"0.01\" />\n        </div>\n        <div>\n          <label for=\"sellPrice\">Sell Price:</label>\n          <input type=\"number\" v-model=\"sellPrice\" required step=\"0.01\" />\n        </div>\n        <button type=\"submit\">Add Trade</button>\n      </form>\n    </div>\n\n    <div class=\"trades-list\">\n      <h2>Your Trades</h2>\n      <ul>\n        <li v-for=\"trade in trades\" :key=\"trade.id\">\n          {{ trade.company }} - Qty: {{ trade.quantity }} | Buy: {{ trade.buyPrice }} | Sell: {{ trade.sellPrice }} | P/L: {{ calculateProfitLoss(trade) }}\n        </li>\n      </ul>\n    </div>\n\n    <div class=\"chart\">\n      <h2>Trading Chart</h2>\n      <!-- Here you can integrate your TradingView chart component -->\n      <div id=\"trading-chart\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Dashboard',\n  data() {\n    return {\n      selectedCompany: '',\n      quantity: 0,\n      buyPrice: 0,\n      sellPrice: 0,\n      companies: [\n        { id: 1, name: 'Company A' },\n        { id: 2, name: 'Company B' },\n        { id: 3, name: 'Company C' },\n      ],\n      trades: [],\n    };\n  },\n  computed: {\n    totalTrades() {\n      return this.trades.length;\n    },\n    profitLoss() {\n      return this.trades.reduce((total, trade) => total + this.calculateProfitLoss(trade), 0);\n    }\n  },\n  methods: {\n    addTrade() {\n      const newTrade = {\n        id: this.trades.length + 1,\n        company: this.selectedCompany,\n        quantity: this.quantity,\n        buyPrice: parseFloat(this.buyPrice),\n        sellPrice: parseFloat(this.sellPrice),\n      };\n      this.trades.push(newTrade);\n      // Reset fields after adding trade\n      this.selectedCompany = '';\n      this.quantity = 0;\n      this.buyPrice = 0;\n      this.sellPrice = 0;\n    },\n    calculateProfitLoss(trade) {\n      return (trade.sellPrice - trade.buyPrice) * trade.quantity;\n    },\n  },\n  mounted() {\n    // Here you can initialize your TradingView chart\n    const widget = new window.TradingView.widget({\n      container_id: \"trading-chart\",\n      width: \"100%\",\n      height: 400,\n      symbol: \"AAPL\",\n      interval: \"D\",\n      timezone: \"Etc/UTC\",\n      theme: \"light\",\n      style: \"1\",\n      toolbar_bg: \"#f1f3f6\",\n      enable_publishing: false,\n      allow_symbol_change: true,\n      details: true,\n      hotlist: true,\n      calendar: true,\n      news: [\n        \"headlines\",\n        \"stock\",\n        \"crypto\",\n        \"forex\",\n      ],\n    });\n  },\n};\n</script>\n\n<style scoped>\n.dashboard {\n  padding: 20px;\n}\n\n.summary, .trade-entry, .trades-list, .chart {\n  margin-bottom: 20px;\n  padding: 15px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n}\n\nh1, h2 {\n  color: #333;\n}\n\nform div {\n  margin-bottom: 10px;\n}\n\nlabel {\n  margin-right: 10px;\n}\n\nbutton {\n  padding: 8px 15px;\n  background-color: #35424a;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #2c3e50;\n}\n</style>\n"],"mappings":";;;;;;;;AAuDA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,EAAE;MACnBC,QAAQ,EAAE,CAAC;MACXC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,CAAC;MACZC,SAAS,EAAE,CACT;QAAEC,EAAE,EAAE,CAAC;QAAEP,IAAI,EAAE;MAAY,CAAC,EAC5B;QAAEO,EAAE,EAAE,CAAC;QAAEP,IAAI,EAAE;MAAY,CAAC,EAC5B;QAAEO,EAAE,EAAE,CAAC;QAAEP,IAAI,EAAE;MAAY,CAAC,CAC7B;MACDQ,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,WAAXA,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACF,MAAM,CAACG,MAAM;IAC3B,CAAC;IACDC,UAAU,WAAVA,UAAUA,CAAA,EAAG;MAAA,IAAAC,KAAA;MACX,OAAO,IAAI,CAACL,MAAM,CAACM,MAAM,CAAC,UAACC,KAAK,EAAEC,KAAK;QAAA,OAAKD,KAAI,GAAIF,KAAI,CAACI,mBAAmB,CAACD,KAAK,CAAC;MAAA,GAAE,CAAC,CAAC;IACzF;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,QAAQ,WAARA,QAAQA,CAAA,EAAG;MACT,IAAMC,QAAO,GAAI;QACfb,EAAE,EAAE,IAAI,CAACC,MAAM,CAACG,MAAK,GAAI,CAAC;QAC1BU,OAAO,EAAE,IAAI,CAACnB,eAAe;QAC7BC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,QAAQ,EAAEkB,UAAU,CAAC,IAAI,CAAClB,QAAQ,CAAC;QACnCC,SAAS,EAAEiB,UAAU,CAAC,IAAI,CAACjB,SAAS;MACtC,CAAC;MACD,IAAI,CAACG,MAAM,CAACe,IAAI,CAACH,QAAQ,CAAC;MAC1B;MACA,IAAI,CAAClB,eAAc,GAAI,EAAE;MACzB,IAAI,CAACC,QAAO,GAAI,CAAC;MACjB,IAAI,CAACC,QAAO,GAAI,CAAC;MACjB,IAAI,CAACC,SAAQ,GAAI,CAAC;IACpB,CAAC;IACDY,mBAAmB,WAAnBA,mBAAmBA,CAACD,KAAK,EAAE;MACzB,OAAO,CAACA,KAAK,CAACX,SAAQ,GAAIW,KAAK,CAACZ,QAAQ,IAAIY,KAAK,CAACb,QAAQ;IAC5D;EACF,CAAC;EACDqB,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACR;IACA,IAAMC,MAAK,GAAI,IAAIC,MAAM,CAACC,WAAW,CAACF,MAAM,CAAC;MAC3CG,YAAY,EAAE,eAAe;MAC7BC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,GAAG;MACXC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE,GAAG;MACbC,QAAQ,EAAE,SAAS;MACnBC,KAAK,EAAE,OAAO;MACdC,KAAK,EAAE,GAAG;MACVC,UAAU,EAAE,SAAS;MACrBC,iBAAiB,EAAE,KAAK;MACxBC,mBAAmB,EAAE,IAAI;MACzBC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE,IAAI;MACdC,IAAI,EAAE,CACJ,WAAW,EACX,OAAO,EACP,QAAQ,EACR,OAAO;IAEX,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}