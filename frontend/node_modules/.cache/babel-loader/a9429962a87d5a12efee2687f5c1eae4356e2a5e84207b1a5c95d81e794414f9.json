{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/web.timers.js\";\nimport _regeneratorRuntime from \"/home/shivam/Desktop/tradetrek/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/shivam/Desktop/tradetrek/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { Line } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, LinearScale, PointElement, CategoryScale } from 'chart.js';\nimport axios from 'axios';\nChartJS.register(Title, Tooltip, Legend, LineElement, LinearScale, PointElement, CategoryScale);\nexport default {\n  name: 'DowJonesChart',\n  components: {\n    Line: Line\n  },\n  data: function data() {\n    return {\n      loaded: false,\n      chartData: null,\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    };\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, timeSeries, labels, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('https://www.alphavantage.co/query', {\n                params: {\n                  \"function\": 'TIME_SERIES_INTRADAY',\n                  symbol: 'DJI',\n                  // Dow Jones Industrial Average\n                  interval: '5min',\n                  apikey: 'FTT8Y4EJ3V56MDKQ' // Replace with your Alpha Vantage API key\n                }\n              });\n            case 3:\n              response = _context.sent;\n              timeSeries = response.data['Time Series (5min)'];\n              labels = Object.keys(timeSeries).reverse();\n              data = labels.map(function (time) {\n                return parseFloat(timeSeries[time]['4. close']);\n              });\n              _this.chartData = {\n                labels: labels,\n                datasets: [{\n                  label: 'Dow Jones Industrial Average',\n                  backgroundColor: '#f87979',\n                  data: data\n                }]\n              };\n              _this.loaded = true;\n              _context.next = 14;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching Dow Jones data:', _context.t0);\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 11]]);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    this.fetchData();\n    // Update every 5 minutes\n    setInterval(this.fetchData, 300000);\n  }\n};","map":{"version":3,"names":["Line","Chart","ChartJS","Title","Tooltip","Legend","LineElement","LinearScale","PointElement","CategoryScale","axios","register","name","components","data","loaded","chartData","chartOptions","responsive","maintainAspectRatio","methods","fetchData","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","timeSeries","labels","wrap","_callee$","_context","prev","next","get","params","symbol","interval","apikey","sent","Object","keys","reverse","map","time","parseFloat","datasets","label","backgroundColor","t0","console","error","stop","mounted","setInterval"],"sources":["/home/shivam/Desktop/tradetrek/frontend/src/components/DowJonesChart.vue"],"sourcesContent":["<template>\n  <div class=\"chart-container\">\n    <Line\n      v-if=\"loaded\"\n      :data=\"chartData\"\n      :options=\"chartOptions\"\n    />\n  </div>\n</template>\n\n<script>\nimport { Line } from 'vue-chartjs'\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, LinearScale, PointElement, CategoryScale } from 'chart.js'\nimport axios from 'axios'\n\nChartJS.register(Title, Tooltip, Legend, LineElement, LinearScale, PointElement, CategoryScale)\n\nexport default {\n  name: 'DowJonesChart',\n  components: { Line },\n  data() {\n    return {\n      loaded: false,\n      chartData: null,\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    }\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const response = await axios.get('https://www.alphavantage.co/query', {\n          params: {\n            function: 'TIME_SERIES_INTRADAY',\n            symbol: 'DJI', // Dow Jones Industrial Average\n            interval: '5min',\n            apikey: 'FTT8Y4EJ3V56MDKQ' // Replace with your Alpha Vantage API key\n          }\n        })\n        \n        const timeSeries = response.data['Time Series (5min)']\n        const labels = Object.keys(timeSeries).reverse()\n        const data = labels.map(time => parseFloat(timeSeries[time]['4. close']))\n        \n        this.chartData = {\n          labels,\n          datasets: [{\n            label: 'Dow Jones Industrial Average',\n            backgroundColor: '#f87979',\n            data\n          }]\n        }\n        this.loaded = true\n      } catch (error) {\n        console.error('Error fetching Dow Jones data:', error)\n      }\n    }\n  },\n  mounted() {\n    this.fetchData()\n    // Update every 5 minutes\n    setInterval(this.fetchData, 300000)\n  }\n}\n</script>\n\n<style scoped>\n.chart-container {\n  height: 400px;\n}\n</style>"],"mappings":";;;;;;;;;;;;AAWA,SAASA,IAAG,QAAS,aAAY;AACjC,SAASC,KAAI,IAAKC,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,WAAW,EAAEC,WAAW,EAAEC,YAAY,EAAEC,aAAY,QAAS,UAAS;AACzH,OAAOC,KAAI,MAAO,OAAM;AAExBR,OAAO,CAACS,QAAQ,CAACR,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,WAAW,EAAEC,WAAW,EAAEC,YAAY,EAAEC,aAAa;AAE9F,eAAe;EACbG,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE;IAAEb,IAAG,EAAHA;EAAK,CAAC;EACpBc,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,KAAK;MACbC,SAAS,EAAE,IAAI;MACfC,YAAY,EAAE;QACZC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE;MACvB;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACDC,SAAS,WAATA,SAASA,CAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAf,IAAA;QAAA,OAAAU,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAESxB,KAAK,CAACyB,GAAG,CAAC,mCAAmC,EAAE;gBACpEC,MAAM,EAAE;kBACN,YAAU,sBAAsB;kBAChCC,MAAM,EAAE,KAAK;kBAAE;kBACfC,QAAQ,EAAE,MAAM;kBAChBC,MAAM,EAAE,kBAAiB,CAAE;gBAC7B;cACF,CAAC;YAAA;cAPKZ,QAAO,GAAAK,QAAA,CAAAQ,IAAA;cASPZ,UAAS,GAAID,QAAQ,CAACb,IAAI,CAAC,oBAAoB;cAC/Ce,MAAK,GAAIY,MAAM,CAACC,IAAI,CAACd,UAAU,CAAC,CAACe,OAAO,CAAC;cACzC7B,IAAG,GAAIe,MAAM,CAACe,GAAG,CAAC,UAAAC,IAAG;gBAAA,OAAKC,UAAU,CAAClB,UAAU,CAACiB,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC;cAAA;cAExEvB,KAAI,CAACN,SAAQ,GAAI;gBACfa,MAAM,EAANA,MAAM;gBACNkB,QAAQ,EAAE,CAAC;kBACTC,KAAK,EAAE,8BAA8B;kBACrCC,eAAe,EAAE,SAAS;kBAC1BnC,IAAG,EAAHA;gBACF,CAAC;cACH;cACAQ,KAAI,CAACP,MAAK,GAAI,IAAG;cAAAiB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAkB,EAAA,GAAAlB,QAAA;cAEjBmB,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAApB,QAAA,CAAAkB,EAAO;YAAA;YAAA;cAAA,OAAAlB,QAAA,CAAAqB,IAAA;UAAA;QAAA,GAAA3B,OAAA;MAAA;IAEzD;EACF,CAAC;EACD4B,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACR,IAAI,CAACjC,SAAS,CAAC;IACf;IACAkC,WAAW,CAAC,IAAI,CAAClC,SAAS,EAAE,MAAM;EACpC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}