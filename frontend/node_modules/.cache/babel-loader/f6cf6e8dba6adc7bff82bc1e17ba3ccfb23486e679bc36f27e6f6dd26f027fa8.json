{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport TradingChart from '@/components/TradingChart.vue';\nexport default {\n  name: 'Dashboard',\n  components: {\n    TradingChart: TradingChart\n  },\n  data: function data() {\n    return {\n      companies: ['AAPL', 'GOOGL', 'AMZN', 'MSFT'],\n      // Use stock symbols\n      selectedCompany: '',\n      quantity: 0,\n      buyPrice: 0,\n      sellPrice: 0,\n      profitLoss: null,\n      trades: []\n    };\n  },\n  methods: {\n    addTrade: function addTrade() {\n      var totalCost = this.quantity * this.buyPrice;\n      var totalRevenue = this.quantity * this.sellPrice;\n      var profitLoss = totalRevenue - totalCost;\n      this.trades.push({\n        company: this.selectedCompany,\n        quantity: this.quantity,\n        buyPrice: this.buyPrice,\n        sellPrice: this.sellPrice,\n        profitLoss: profitLoss\n      });\n\n      // Reset the form\n      this.selectedCompany = '';\n      this.quantity = 0;\n      this.buyPrice = 0;\n      this.sellPrice = 0;\n      this.profitLoss = null;\n    }\n  }\n};","map":{"version":3,"names":["TradingChart","name","components","data","companies","selectedCompany","quantity","buyPrice","sellPrice","profitLoss","trades","methods","addTrade","totalCost","totalRevenue","push","company"],"sources":["/home/shivam/Desktop/tradetrek/frontend/src/views/Dashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <h1>Dashboard</h1>\n    <h2>Track Trades</h2>\n    <form @submit.prevent=\"addTrade\">\n      <div class=\"form-group\">\n        <label for=\"company\">Select Company:</label>\n        <select v-model=\"selectedCompany\" id=\"company\">\n          <option v-for=\"company in companies\" :key=\"company\" :value=\"company\">{{ company }}</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"quantity\">Quantity:</label>\n        <input type=\"number\" v-model.number=\"quantity\" id=\"quantity\" required />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"buyPrice\">Buy Price:</label>\n        <input type=\"number\" v-model.number=\"buyPrice\" id=\"buyPrice\" required />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"sellPrice\">Sell Price:</label>\n        <input type=\"number\" v-model.number=\"sellPrice\" id=\"sellPrice\" required />\n      </div>\n      <button type=\"submit\">Add Trade</button>\n    </form>\n\n    <h3 v-if=\"profitLoss !== null\">Profit/Loss: {{ profitLoss }}</h3>\n\n    <h2>Your Trades</h2>\n    <ul>\n      <li v-for=\"(trade, index) in trades\" :key=\"index\">\n        {{ trade.company }} - Qty: {{ trade.quantity }} - Buy: {{ trade.buyPrice }} - Sell: {{ trade.sellPrice }} - Profit/Loss: {{ trade.profitLoss }}\n      </li>\n    </ul>\n\n    <TradingChart :symbol=\"selectedCompany\" />\n  </div>\n</template>\n\n<script>\nimport TradingChart from '@/components/TradingChart.vue';\n\nexport default {\n  name: 'Dashboard',\n  components: {\n    TradingChart,\n  },\n  data() {\n    return {\n      companies: ['AAPL', 'GOOGL', 'AMZN', 'MSFT'], // Use stock symbols\n      selectedCompany: '',\n      quantity: 0,\n      buyPrice: 0,\n      sellPrice: 0,\n      profitLoss: null,\n      trades: [],\n    };\n  },\n  methods: {\n    addTrade() {\n      const totalCost = this.quantity * this.buyPrice;\n      const totalRevenue = this.quantity * this.sellPrice;\n      const profitLoss = totalRevenue - totalCost;\n\n      this.trades.push({\n        company: this.selectedCompany,\n        quantity: this.quantity,\n        buyPrice: this.buyPrice,\n        sellPrice: this.sellPrice,\n        profitLoss: profitLoss,\n      });\n\n      // Reset the form\n      this.selectedCompany = '';\n      this.quantity = 0;\n      this.buyPrice = 0;\n      this.sellPrice = 0;\n      this.profitLoss = null;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.dashboard {\n  text-align: center;\n  padding: 20px;\n}\n\n.form-group {\n  margin: 10px 0;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\ninput,\nselect {\n  padding: 8px;\n  width: 200px;\n  margin-bottom: 10px;\n}\n</style>\n"],"mappings":";;AAwCA,OAAOA,YAAW,MAAO,+BAA+B;AAExD,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVF,YAAY,EAAZA;EACF,CAAC;EACDG,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC;MAAE;MAC9CC,eAAe,EAAE,EAAE;MACnBC,QAAQ,EAAE,CAAC;MACXC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,CAAC;MACZC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQ,WAARA,QAAQA,CAAA,EAAG;MACT,IAAMC,SAAQ,GAAI,IAAI,CAACP,QAAO,GAAI,IAAI,CAACC,QAAQ;MAC/C,IAAMO,YAAW,GAAI,IAAI,CAACR,QAAO,GAAI,IAAI,CAACE,SAAS;MACnD,IAAMC,UAAS,GAAIK,YAAW,GAAID,SAAS;MAE3C,IAAI,CAACH,MAAM,CAACK,IAAI,CAAC;QACfC,OAAO,EAAE,IAAI,CAACX,eAAe;QAC7BC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,UAAU,EAAEA;MACd,CAAC,CAAC;;MAEF;MACA,IAAI,CAACJ,eAAc,GAAI,EAAE;MACzB,IAAI,CAACC,QAAO,GAAI,CAAC;MACjB,IAAI,CAACC,QAAO,GAAI,CAAC;MACjB,IAAI,CAACC,SAAQ,GAAI,CAAC;MAClB,IAAI,CAACC,UAAS,GAAI,IAAI;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}